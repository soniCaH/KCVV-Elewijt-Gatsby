/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  /** Copy file to static directory and return public url to it */
  readonly publicURL: Maybe<Scalars['String']>;
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
  readonly url: Maybe<Scalars['String']>;
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'children'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'publicURL'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid'
  | 'url';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly publicURL: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageCropFocus =
  | 17
  | 0
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | ''
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type Query = {
  readonly allDirectory: DirectoryConnection;
  readonly allFile: FileConnection;
  readonly allFileFile: file__fileConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allMediaImage: media__imageConnection;
  readonly allNodeArticle: node__articleConnection;
  readonly allNodeEvent: node__eventConnection;
  readonly allNodeKcvvTv: node__kcvv_tvConnection;
  readonly allNodePage: node__pageConnection;
  readonly allNodePlayer: node__playerConnection;
  readonly allNodePotw: node__potwConnection;
  readonly allNodeSponsor: node__sponsorConnection;
  readonly allNodeStaff: node__staffConnection;
  readonly allNodeTeam: node__teamConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly allTaxonomyTermCategory: taxonomy_term__categoryConnection;
  readonly allUserUser: user__userConnection;
  readonly directory: Maybe<Directory>;
  readonly file: Maybe<File>;
  readonly fileFile: Maybe<file__file>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly mediaImage: Maybe<media__image>;
  readonly nodeArticle: Maybe<node__article>;
  readonly nodeEvent: Maybe<node__event>;
  readonly nodeKcvvTv: Maybe<node__kcvv_tv>;
  readonly nodePage: Maybe<node__page>;
  readonly nodePlayer: Maybe<node__player>;
  readonly nodePotw: Maybe<node__potw>;
  readonly nodeSponsor: Maybe<node__sponsor>;
  readonly nodeStaff: Maybe<node__staff>;
  readonly nodeTeam: Maybe<node__team>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
  readonly taxonomyTermCategory: Maybe<taxonomy_term__category>;
  readonly userUser: Maybe<user__user>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allFileFileArgs = {
  filter: InputMaybe<file__fileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<file__fileSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allMediaImageArgs = {
  filter: InputMaybe<media__imageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<media__imageSortInput>;
};


type Query_allNodeArticleArgs = {
  filter: InputMaybe<node__articleFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__articleSortInput>;
};


type Query_allNodeEventArgs = {
  filter: InputMaybe<node__eventFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__eventSortInput>;
};


type Query_allNodeKcvvTvArgs = {
  filter: InputMaybe<node__kcvv_tvFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__kcvv_tvSortInput>;
};


type Query_allNodePageArgs = {
  filter: InputMaybe<node__pageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__pageSortInput>;
};


type Query_allNodePlayerArgs = {
  filter: InputMaybe<node__playerFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__playerSortInput>;
};


type Query_allNodePotwArgs = {
  filter: InputMaybe<node__potwFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__potwSortInput>;
};


type Query_allNodeSponsorArgs = {
  filter: InputMaybe<node__sponsorFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__sponsorSortInput>;
};


type Query_allNodeStaffArgs = {
  filter: InputMaybe<node__staffFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__staffSortInput>;
};


type Query_allNodeTeamArgs = {
  filter: InputMaybe<node__teamFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<node__teamSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_allTaxonomyTermCategoryArgs = {
  filter: InputMaybe<taxonomy_term__categoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<taxonomy_term__categorySortInput>;
};


type Query_allUserUserArgs = {
  filter: InputMaybe<user__userFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<user__userSortInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  publicURL: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
};


type Query_fileFileArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__fid: InputMaybe<IntQueryOperatorInput>;
  filemime: InputMaybe<StringQueryOperatorInput>;
  filename: InputMaybe<StringQueryOperatorInput>;
  filesize: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  localFile: InputMaybe<FileFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  relationships: InputMaybe<file__fileRelationshipsFilterInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  uri: InputMaybe<file__fileUriFilterInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_mediaImageArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__mid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_media_image: InputMaybe<media__imageField_media_imageFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<media__imagePathFilterInput>;
  relationships: InputMaybe<media__imageRelationshipsFilterInput>;
  revision_created: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  thumbnail: InputMaybe<media__imageThumbnailFilterInput>;
};


type Query_nodeArticleArgs = {
  body: InputMaybe<node__articleBodyFilterInput>;
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_featured: InputMaybe<BooleanQueryOperatorInput>;
  field_related_content: InputMaybe<node__articleField_related_contentFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__articlePathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__articleRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodeEventArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_daterange: InputMaybe<node__eventField_daterangeFilterInput>;
  field_event_link: InputMaybe<node__eventField_event_linkFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__eventPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__eventRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  unpublish_on: InputMaybe<DateQueryOperatorInput>;
};


type Query_nodeKcvvTvArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_website: InputMaybe<node__kcvv_tvField_websiteFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__kcvv_tvPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__kcvv_tvRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodePageArgs = {
  body: InputMaybe<node__pageBodyFilterInput>;
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__pagePathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__pageRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodePlayerArgs = {
  body: InputMaybe<node__playerBodyFilterInput>;
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_birth_date: InputMaybe<DateQueryOperatorInput>;
  field_date_leave: InputMaybe<DateQueryOperatorInput>;
  field_firstname: InputMaybe<StringQueryOperatorInput>;
  field_image: InputMaybe<node__playerField_imageFilterInput>;
  field_image_celebrate: InputMaybe<node__playerField_image_celebrateFilterInput>;
  field_join_date: InputMaybe<DateQueryOperatorInput>;
  field_lastname: InputMaybe<StringQueryOperatorInput>;
  field_position: InputMaybe<StringQueryOperatorInput>;
  field_shirtnumber: InputMaybe<IntQueryOperatorInput>;
  field_vv_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__playerPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__playerRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodePotwArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__potwPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__potwRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodeSponsorArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_type: InputMaybe<StringQueryOperatorInput>;
  field_website: InputMaybe<node__sponsorField_websiteFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__sponsorPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__sponsorRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodeStaffArgs = {
  body: InputMaybe<node__staffBodyFilterInput>;
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_birth_date: InputMaybe<DateQueryOperatorInput>;
  field_firstname: InputMaybe<StringQueryOperatorInput>;
  field_image: InputMaybe<node__staffField_imageFilterInput>;
  field_join_date: InputMaybe<DateQueryOperatorInput>;
  field_lastname: InputMaybe<StringQueryOperatorInput>;
  field_position_short: InputMaybe<StringQueryOperatorInput>;
  field_position_staff: InputMaybe<StringQueryOperatorInput>;
  field_vv_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__staffPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__staffRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_nodeTeamArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  created: InputMaybe<DateQueryOperatorInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  field_contact_info: InputMaybe<node__teamField_contact_infoFilterInput>;
  field_division_full: InputMaybe<StringQueryOperatorInput>;
  field_fb_id: InputMaybe<StringQueryOperatorInput>;
  field_fb_id_2: InputMaybe<StringQueryOperatorInput>;
  field_staff: InputMaybe<node__teamField_staffFilterListInput>;
  field_tagline: InputMaybe<StringQueryOperatorInput>;
  field_vv_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<node__teamPathFilterInput>;
  promote: InputMaybe<BooleanQueryOperatorInput>;
  relationships: InputMaybe<node__teamRelationshipsFilterInput>;
  revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  sticky: InputMaybe<BooleanQueryOperatorInput>;
  title: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  flags: InputMaybe<SiteFlagsFilterInput>;
  graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};


type Query_taxonomyTermCategoryArgs = {
  changed: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  drupal_internal__revision_id: InputMaybe<IntQueryOperatorInput>;
  drupal_internal__tid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  langcode: InputMaybe<StringQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<taxonomy_term__categoryPathFilterInput>;
  relationships: InputMaybe<taxonomy_term__categoryRelationshipsFilterInput>;
  revision_created: InputMaybe<DateQueryOperatorInput>;
  revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  status: InputMaybe<BooleanQueryOperatorInput>;
  weight: InputMaybe<IntQueryOperatorInput>;
};


type Query_userUserArgs = {
  children: InputMaybe<NodeFilterListInput>;
  display_name: InputMaybe<StringQueryOperatorInput>;
  drupal_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  relationships: InputMaybe<user__userRelationshipsFilterInput>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly flags: Maybe<SiteFlags>;
  readonly graphqlTypegen: Maybe<SiteGraphqlTypegen>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'flags.FAST_DEV'
  | 'flags.PARALLEL_SOURCING'
  | 'graphqlTypegen.typesOutputPath'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.author'
  | 'siteMetadata.description'
  | 'siteMetadata.fbAppId'
  | 'siteMetadata.kcvvPsdApi'
  | 'siteMetadata.siteUrl'
  | 'siteMetadata.subTitle'
  | 'siteMetadata.title'
  | 'siteMetadata.twitterHandle'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly flags: InputMaybe<SiteFlagsFilterInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFlags = {
  readonly FAST_DEV: Maybe<Scalars['Boolean']>;
  readonly PARALLEL_SOURCING: Maybe<Scalars['Boolean']>;
};

type SiteFlagsFilterInput = {
  readonly FAST_DEV: InputMaybe<BooleanQueryOperatorInput>;
  readonly PARALLEL_SOURCING: InputMaybe<BooleanQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGraphqlTypegen = {
  readonly typesOutputPath: Maybe<Scalars['String']>;
};

type SiteGraphqlTypegenFilterInput = {
  readonly typesOutputPath: InputMaybe<StringQueryOperatorInput>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly author: Maybe<Scalars['String']>;
  readonly description: Maybe<Scalars['String']>;
  readonly fbAppId: Maybe<Scalars['String']>;
  readonly kcvvPsdApi: Maybe<Scalars['String']>;
  readonly siteUrl: Maybe<Scalars['String']>;
  readonly subTitle: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
  readonly twitterHandle: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFilterInput = {
  readonly author: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fbAppId: InputMaybe<StringQueryOperatorInput>;
  readonly kcvvPsdApi: InputMaybe<StringQueryOperatorInput>;
  readonly siteUrl: InputMaybe<StringQueryOperatorInput>;
  readonly subTitle: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly twitterHandle: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type file__file = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__fid: Maybe<Scalars['Int']>;
  readonly filemime: Maybe<Scalars['String']>;
  readonly filename: Maybe<Scalars['String']>;
  readonly filesize: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly localFile: Maybe<File>;
  readonly parent: Maybe<Node>;
  readonly relationships: Maybe<file__fileRelationships>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly uri: Maybe<file__fileUri>;
};


type file__file_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type file__file_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type file__fileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<file__fileEdge>;
  readonly group: ReadonlyArray<file__fileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<file__file>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type file__fileConnection_distinctArgs = {
  field: file__fileFieldsEnum;
};


type file__fileConnection_groupArgs = {
  field: file__fileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type file__fileConnection_maxArgs = {
  field: file__fileFieldsEnum;
};


type file__fileConnection_minArgs = {
  field: file__fileFieldsEnum;
};


type file__fileConnection_sumArgs = {
  field: file__fileFieldsEnum;
};

type file__fileEdge = {
  readonly next: Maybe<file__file>;
  readonly node: file__file;
  readonly previous: Maybe<file__file>;
};

type file__fileFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'drupal_id'
  | 'drupal_internal__fid'
  | 'filemime'
  | 'filename'
  | 'filesize'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'localFile.absolutePath'
  | 'localFile.accessTime'
  | 'localFile.atime'
  | 'localFile.atimeMs'
  | 'localFile.base'
  | 'localFile.birthTime'
  | 'localFile.birthtime'
  | 'localFile.birthtimeMs'
  | 'localFile.blksize'
  | 'localFile.blocks'
  | 'localFile.changeTime'
  | 'localFile.childImageSharp.children'
  | 'localFile.childImageSharp.children.children'
  | 'localFile.childImageSharp.children.id'
  | 'localFile.childImageSharp.fixed.aspectRatio'
  | 'localFile.childImageSharp.fixed.base64'
  | 'localFile.childImageSharp.fixed.height'
  | 'localFile.childImageSharp.fixed.originalName'
  | 'localFile.childImageSharp.fixed.src'
  | 'localFile.childImageSharp.fixed.srcSet'
  | 'localFile.childImageSharp.fixed.srcSetWebp'
  | 'localFile.childImageSharp.fixed.srcWebp'
  | 'localFile.childImageSharp.fixed.tracedSVG'
  | 'localFile.childImageSharp.fixed.width'
  | 'localFile.childImageSharp.fluid.aspectRatio'
  | 'localFile.childImageSharp.fluid.base64'
  | 'localFile.childImageSharp.fluid.originalImg'
  | 'localFile.childImageSharp.fluid.originalName'
  | 'localFile.childImageSharp.fluid.presentationHeight'
  | 'localFile.childImageSharp.fluid.presentationWidth'
  | 'localFile.childImageSharp.fluid.sizes'
  | 'localFile.childImageSharp.fluid.src'
  | 'localFile.childImageSharp.fluid.srcSet'
  | 'localFile.childImageSharp.fluid.srcSetWebp'
  | 'localFile.childImageSharp.fluid.srcWebp'
  | 'localFile.childImageSharp.fluid.tracedSVG'
  | 'localFile.childImageSharp.gatsbyImageData'
  | 'localFile.childImageSharp.id'
  | 'localFile.childImageSharp.internal.content'
  | 'localFile.childImageSharp.internal.contentDigest'
  | 'localFile.childImageSharp.internal.description'
  | 'localFile.childImageSharp.internal.fieldOwners'
  | 'localFile.childImageSharp.internal.ignoreType'
  | 'localFile.childImageSharp.internal.mediaType'
  | 'localFile.childImageSharp.internal.owner'
  | 'localFile.childImageSharp.internal.type'
  | 'localFile.childImageSharp.original.height'
  | 'localFile.childImageSharp.original.src'
  | 'localFile.childImageSharp.original.width'
  | 'localFile.childImageSharp.parent.children'
  | 'localFile.childImageSharp.parent.id'
  | 'localFile.childImageSharp.resize.aspectRatio'
  | 'localFile.childImageSharp.resize.height'
  | 'localFile.childImageSharp.resize.originalName'
  | 'localFile.childImageSharp.resize.src'
  | 'localFile.childImageSharp.resize.tracedSVG'
  | 'localFile.childImageSharp.resize.width'
  | 'localFile.children'
  | 'localFile.childrenImageSharp'
  | 'localFile.childrenImageSharp.children'
  | 'localFile.childrenImageSharp.children.children'
  | 'localFile.childrenImageSharp.children.id'
  | 'localFile.childrenImageSharp.fixed.aspectRatio'
  | 'localFile.childrenImageSharp.fixed.base64'
  | 'localFile.childrenImageSharp.fixed.height'
  | 'localFile.childrenImageSharp.fixed.originalName'
  | 'localFile.childrenImageSharp.fixed.src'
  | 'localFile.childrenImageSharp.fixed.srcSet'
  | 'localFile.childrenImageSharp.fixed.srcSetWebp'
  | 'localFile.childrenImageSharp.fixed.srcWebp'
  | 'localFile.childrenImageSharp.fixed.tracedSVG'
  | 'localFile.childrenImageSharp.fixed.width'
  | 'localFile.childrenImageSharp.fluid.aspectRatio'
  | 'localFile.childrenImageSharp.fluid.base64'
  | 'localFile.childrenImageSharp.fluid.originalImg'
  | 'localFile.childrenImageSharp.fluid.originalName'
  | 'localFile.childrenImageSharp.fluid.presentationHeight'
  | 'localFile.childrenImageSharp.fluid.presentationWidth'
  | 'localFile.childrenImageSharp.fluid.sizes'
  | 'localFile.childrenImageSharp.fluid.src'
  | 'localFile.childrenImageSharp.fluid.srcSet'
  | 'localFile.childrenImageSharp.fluid.srcSetWebp'
  | 'localFile.childrenImageSharp.fluid.srcWebp'
  | 'localFile.childrenImageSharp.fluid.tracedSVG'
  | 'localFile.childrenImageSharp.gatsbyImageData'
  | 'localFile.childrenImageSharp.id'
  | 'localFile.childrenImageSharp.internal.content'
  | 'localFile.childrenImageSharp.internal.contentDigest'
  | 'localFile.childrenImageSharp.internal.description'
  | 'localFile.childrenImageSharp.internal.fieldOwners'
  | 'localFile.childrenImageSharp.internal.ignoreType'
  | 'localFile.childrenImageSharp.internal.mediaType'
  | 'localFile.childrenImageSharp.internal.owner'
  | 'localFile.childrenImageSharp.internal.type'
  | 'localFile.childrenImageSharp.original.height'
  | 'localFile.childrenImageSharp.original.src'
  | 'localFile.childrenImageSharp.original.width'
  | 'localFile.childrenImageSharp.parent.children'
  | 'localFile.childrenImageSharp.parent.id'
  | 'localFile.childrenImageSharp.resize.aspectRatio'
  | 'localFile.childrenImageSharp.resize.height'
  | 'localFile.childrenImageSharp.resize.originalName'
  | 'localFile.childrenImageSharp.resize.src'
  | 'localFile.childrenImageSharp.resize.tracedSVG'
  | 'localFile.childrenImageSharp.resize.width'
  | 'localFile.children.children'
  | 'localFile.children.children.children'
  | 'localFile.children.children.id'
  | 'localFile.children.id'
  | 'localFile.children.internal.content'
  | 'localFile.children.internal.contentDigest'
  | 'localFile.children.internal.description'
  | 'localFile.children.internal.fieldOwners'
  | 'localFile.children.internal.ignoreType'
  | 'localFile.children.internal.mediaType'
  | 'localFile.children.internal.owner'
  | 'localFile.children.internal.type'
  | 'localFile.children.parent.children'
  | 'localFile.children.parent.id'
  | 'localFile.ctime'
  | 'localFile.ctimeMs'
  | 'localFile.dev'
  | 'localFile.dir'
  | 'localFile.ext'
  | 'localFile.extension'
  | 'localFile.gid'
  | 'localFile.id'
  | 'localFile.ino'
  | 'localFile.internal.content'
  | 'localFile.internal.contentDigest'
  | 'localFile.internal.description'
  | 'localFile.internal.fieldOwners'
  | 'localFile.internal.ignoreType'
  | 'localFile.internal.mediaType'
  | 'localFile.internal.owner'
  | 'localFile.internal.type'
  | 'localFile.mode'
  | 'localFile.modifiedTime'
  | 'localFile.mtime'
  | 'localFile.mtimeMs'
  | 'localFile.name'
  | 'localFile.nlink'
  | 'localFile.parent.children'
  | 'localFile.parent.children.children'
  | 'localFile.parent.children.id'
  | 'localFile.parent.id'
  | 'localFile.parent.internal.content'
  | 'localFile.parent.internal.contentDigest'
  | 'localFile.parent.internal.description'
  | 'localFile.parent.internal.fieldOwners'
  | 'localFile.parent.internal.ignoreType'
  | 'localFile.parent.internal.mediaType'
  | 'localFile.parent.internal.owner'
  | 'localFile.parent.internal.type'
  | 'localFile.parent.parent.children'
  | 'localFile.parent.parent.id'
  | 'localFile.prettySize'
  | 'localFile.publicURL'
  | 'localFile.rdev'
  | 'localFile.relativeDirectory'
  | 'localFile.relativePath'
  | 'localFile.root'
  | 'localFile.size'
  | 'localFile.sourceInstanceName'
  | 'localFile.uid'
  | 'localFile.url'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'relationships.media__image'
  | 'relationships.media__image.changed'
  | 'relationships.media__image.children'
  | 'relationships.media__image.children.children'
  | 'relationships.media__image.children.id'
  | 'relationships.media__image.created'
  | 'relationships.media__image.default_langcode'
  | 'relationships.media__image.drupal_id'
  | 'relationships.media__image.drupal_internal__mid'
  | 'relationships.media__image.drupal_internal__vid'
  | 'relationships.media__image.field_media_image.alt'
  | 'relationships.media__image.field_media_image.height'
  | 'relationships.media__image.field_media_image.title'
  | 'relationships.media__image.field_media_image.width'
  | 'relationships.media__image.id'
  | 'relationships.media__image.internal.content'
  | 'relationships.media__image.internal.contentDigest'
  | 'relationships.media__image.internal.description'
  | 'relationships.media__image.internal.fieldOwners'
  | 'relationships.media__image.internal.ignoreType'
  | 'relationships.media__image.internal.mediaType'
  | 'relationships.media__image.internal.owner'
  | 'relationships.media__image.internal.type'
  | 'relationships.media__image.langcode'
  | 'relationships.media__image.name'
  | 'relationships.media__image.parent.children'
  | 'relationships.media__image.parent.id'
  | 'relationships.media__image.path.alias'
  | 'relationships.media__image.path.langcode'
  | 'relationships.media__image.path.pid'
  | 'relationships.media__image.relationships.node__article'
  | 'relationships.media__image.relationships.node__event'
  | 'relationships.media__image.relationships.node__kcvv_tv'
  | 'relationships.media__image.relationships.node__page'
  | 'relationships.media__image.relationships.node__sponsor'
  | 'relationships.media__image.relationships.node__team'
  | 'relationships.media__image.revision_created'
  | 'relationships.media__image.revision_translation_affected'
  | 'relationships.media__image.status'
  | 'relationships.media__image.thumbnail.alt'
  | 'relationships.media__image.thumbnail.height'
  | 'relationships.media__image.thumbnail.width'
  | 'relationships.node__player'
  | 'relationships.node__player.body.format'
  | 'relationships.node__player.body.processed'
  | 'relationships.node__player.body.summary'
  | 'relationships.node__player.body.value'
  | 'relationships.node__player.changed'
  | 'relationships.node__player.children'
  | 'relationships.node__player.children.children'
  | 'relationships.node__player.children.id'
  | 'relationships.node__player.created'
  | 'relationships.node__player.default_langcode'
  | 'relationships.node__player.drupal_id'
  | 'relationships.node__player.drupal_internal__nid'
  | 'relationships.node__player.drupal_internal__vid'
  | 'relationships.node__player.field_birth_date'
  | 'relationships.node__player.field_date_leave'
  | 'relationships.node__player.field_firstname'
  | 'relationships.node__player.field_image.alt'
  | 'relationships.node__player.field_image.height'
  | 'relationships.node__player.field_image.title'
  | 'relationships.node__player.field_image.width'
  | 'relationships.node__player.field_image_celebrate.alt'
  | 'relationships.node__player.field_image_celebrate.height'
  | 'relationships.node__player.field_image_celebrate.title'
  | 'relationships.node__player.field_image_celebrate.width'
  | 'relationships.node__player.field_join_date'
  | 'relationships.node__player.field_lastname'
  | 'relationships.node__player.field_position'
  | 'relationships.node__player.field_shirtnumber'
  | 'relationships.node__player.field_vv_id'
  | 'relationships.node__player.id'
  | 'relationships.node__player.internal.content'
  | 'relationships.node__player.internal.contentDigest'
  | 'relationships.node__player.internal.description'
  | 'relationships.node__player.internal.fieldOwners'
  | 'relationships.node__player.internal.ignoreType'
  | 'relationships.node__player.internal.mediaType'
  | 'relationships.node__player.internal.owner'
  | 'relationships.node__player.internal.type'
  | 'relationships.node__player.langcode'
  | 'relationships.node__player.parent.children'
  | 'relationships.node__player.parent.id'
  | 'relationships.node__player.path.alias'
  | 'relationships.node__player.path.langcode'
  | 'relationships.node__player.path.pid'
  | 'relationships.node__player.promote'
  | 'relationships.node__player.relationships.node__article'
  | 'relationships.node__player.relationships.node__potw'
  | 'relationships.node__player.relationships.node__team'
  | 'relationships.node__player.revision_timestamp'
  | 'relationships.node__player.revision_translation_affected'
  | 'relationships.node__player.status'
  | 'relationships.node__player.sticky'
  | 'relationships.node__player.title'
  | 'relationships.node__staff'
  | 'relationships.node__staff.body.format'
  | 'relationships.node__staff.body.processed'
  | 'relationships.node__staff.body.summary'
  | 'relationships.node__staff.body.value'
  | 'relationships.node__staff.changed'
  | 'relationships.node__staff.children'
  | 'relationships.node__staff.children.children'
  | 'relationships.node__staff.children.id'
  | 'relationships.node__staff.created'
  | 'relationships.node__staff.default_langcode'
  | 'relationships.node__staff.drupal_id'
  | 'relationships.node__staff.drupal_internal__nid'
  | 'relationships.node__staff.drupal_internal__vid'
  | 'relationships.node__staff.field_birth_date'
  | 'relationships.node__staff.field_firstname'
  | 'relationships.node__staff.field_image.alt'
  | 'relationships.node__staff.field_image.height'
  | 'relationships.node__staff.field_image.title'
  | 'relationships.node__staff.field_image.width'
  | 'relationships.node__staff.field_join_date'
  | 'relationships.node__staff.field_lastname'
  | 'relationships.node__staff.field_position_short'
  | 'relationships.node__staff.field_position_staff'
  | 'relationships.node__staff.field_vv_id'
  | 'relationships.node__staff.id'
  | 'relationships.node__staff.internal.content'
  | 'relationships.node__staff.internal.contentDigest'
  | 'relationships.node__staff.internal.description'
  | 'relationships.node__staff.internal.fieldOwners'
  | 'relationships.node__staff.internal.ignoreType'
  | 'relationships.node__staff.internal.mediaType'
  | 'relationships.node__staff.internal.owner'
  | 'relationships.node__staff.internal.type'
  | 'relationships.node__staff.langcode'
  | 'relationships.node__staff.parent.children'
  | 'relationships.node__staff.parent.id'
  | 'relationships.node__staff.path.alias'
  | 'relationships.node__staff.path.langcode'
  | 'relationships.node__staff.path.pid'
  | 'relationships.node__staff.promote'
  | 'relationships.node__staff.relationships.node__article'
  | 'relationships.node__staff.relationships.node__team'
  | 'relationships.node__staff.revision_timestamp'
  | 'relationships.node__staff.revision_translation_affected'
  | 'relationships.node__staff.status'
  | 'relationships.node__staff.sticky'
  | 'relationships.node__staff.title'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'status'
  | 'uri.url'
  | 'uri.value';

type file__fileFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__fid: InputMaybe<IntQueryOperatorInput>;
  readonly filemime: InputMaybe<StringQueryOperatorInput>;
  readonly filename: InputMaybe<StringQueryOperatorInput>;
  readonly filesize: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly localFile: InputMaybe<FileFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly relationships: InputMaybe<file__fileRelationshipsFilterInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly uri: InputMaybe<file__fileUriFilterInput>;
};

type file__fileFilterListInput = {
  readonly elemMatch: InputMaybe<file__fileFilterInput>;
};

type file__fileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<file__fileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<file__fileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<file__file>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type file__fileGroupConnection_distinctArgs = {
  field: file__fileFieldsEnum;
};


type file__fileGroupConnection_groupArgs = {
  field: file__fileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type file__fileGroupConnection_maxArgs = {
  field: file__fileFieldsEnum;
};


type file__fileGroupConnection_minArgs = {
  field: file__fileFieldsEnum;
};


type file__fileGroupConnection_sumArgs = {
  field: file__fileFieldsEnum;
};

type file__fileRelationships = {
  readonly media__image: Maybe<ReadonlyArray<Maybe<media__image>>>;
  readonly node__player: Maybe<ReadonlyArray<Maybe<node__player>>>;
  readonly node__staff: Maybe<ReadonlyArray<Maybe<node__staff>>>;
  readonly uid: Maybe<user__user>;
};

type file__fileRelationshipsFilterInput = {
  readonly media__image: InputMaybe<media__imageFilterListInput>;
  readonly node__player: InputMaybe<node__playerFilterListInput>;
  readonly node__staff: InputMaybe<node__staffFilterListInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type file__fileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<file__fileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type file__fileUri = {
  readonly url: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type file__fileUriFilterInput = {
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type media__image = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__mid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_media_image: Maybe<media__imageField_media_image>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<media__imagePath>;
  readonly relationships: Maybe<media__imageRelationships>;
  readonly revision_created: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly thumbnail: Maybe<media__imageThumbnail>;
};


type media__image_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type media__image_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type media__image_revision_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type media__imageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<media__imageEdge>;
  readonly group: ReadonlyArray<media__imageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<media__image>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type media__imageConnection_distinctArgs = {
  field: media__imageFieldsEnum;
};


type media__imageConnection_groupArgs = {
  field: media__imageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type media__imageConnection_maxArgs = {
  field: media__imageFieldsEnum;
};


type media__imageConnection_minArgs = {
  field: media__imageFieldsEnum;
};


type media__imageConnection_sumArgs = {
  field: media__imageFieldsEnum;
};

type media__imageEdge = {
  readonly next: Maybe<media__image>;
  readonly node: media__image;
  readonly previous: Maybe<media__image>;
};

type media__imageField_media_image = {
  readonly alt: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly title: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type media__imageField_media_imageFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type media__imageFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__mid'
  | 'drupal_internal__vid'
  | 'field_media_image.alt'
  | 'field_media_image.height'
  | 'field_media_image.title'
  | 'field_media_image.width'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'relationships.field_media_image.changed'
  | 'relationships.field_media_image.children'
  | 'relationships.field_media_image.children.children'
  | 'relationships.field_media_image.children.id'
  | 'relationships.field_media_image.created'
  | 'relationships.field_media_image.drupal_id'
  | 'relationships.field_media_image.drupal_internal__fid'
  | 'relationships.field_media_image.filemime'
  | 'relationships.field_media_image.filename'
  | 'relationships.field_media_image.filesize'
  | 'relationships.field_media_image.id'
  | 'relationships.field_media_image.internal.content'
  | 'relationships.field_media_image.internal.contentDigest'
  | 'relationships.field_media_image.internal.description'
  | 'relationships.field_media_image.internal.fieldOwners'
  | 'relationships.field_media_image.internal.ignoreType'
  | 'relationships.field_media_image.internal.mediaType'
  | 'relationships.field_media_image.internal.owner'
  | 'relationships.field_media_image.internal.type'
  | 'relationships.field_media_image.langcode'
  | 'relationships.field_media_image.localFile.absolutePath'
  | 'relationships.field_media_image.localFile.accessTime'
  | 'relationships.field_media_image.localFile.atime'
  | 'relationships.field_media_image.localFile.atimeMs'
  | 'relationships.field_media_image.localFile.base'
  | 'relationships.field_media_image.localFile.birthTime'
  | 'relationships.field_media_image.localFile.birthtime'
  | 'relationships.field_media_image.localFile.birthtimeMs'
  | 'relationships.field_media_image.localFile.blksize'
  | 'relationships.field_media_image.localFile.blocks'
  | 'relationships.field_media_image.localFile.changeTime'
  | 'relationships.field_media_image.localFile.children'
  | 'relationships.field_media_image.localFile.childrenImageSharp'
  | 'relationships.field_media_image.localFile.ctime'
  | 'relationships.field_media_image.localFile.ctimeMs'
  | 'relationships.field_media_image.localFile.dev'
  | 'relationships.field_media_image.localFile.dir'
  | 'relationships.field_media_image.localFile.ext'
  | 'relationships.field_media_image.localFile.extension'
  | 'relationships.field_media_image.localFile.gid'
  | 'relationships.field_media_image.localFile.id'
  | 'relationships.field_media_image.localFile.ino'
  | 'relationships.field_media_image.localFile.mode'
  | 'relationships.field_media_image.localFile.modifiedTime'
  | 'relationships.field_media_image.localFile.mtime'
  | 'relationships.field_media_image.localFile.mtimeMs'
  | 'relationships.field_media_image.localFile.name'
  | 'relationships.field_media_image.localFile.nlink'
  | 'relationships.field_media_image.localFile.prettySize'
  | 'relationships.field_media_image.localFile.publicURL'
  | 'relationships.field_media_image.localFile.rdev'
  | 'relationships.field_media_image.localFile.relativeDirectory'
  | 'relationships.field_media_image.localFile.relativePath'
  | 'relationships.field_media_image.localFile.root'
  | 'relationships.field_media_image.localFile.size'
  | 'relationships.field_media_image.localFile.sourceInstanceName'
  | 'relationships.field_media_image.localFile.uid'
  | 'relationships.field_media_image.localFile.url'
  | 'relationships.field_media_image.parent.children'
  | 'relationships.field_media_image.parent.id'
  | 'relationships.field_media_image.relationships.media__image'
  | 'relationships.field_media_image.relationships.node__player'
  | 'relationships.field_media_image.relationships.node__staff'
  | 'relationships.field_media_image.status'
  | 'relationships.field_media_image.uri.url'
  | 'relationships.field_media_image.uri.value'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'relationships.node__event'
  | 'relationships.node__event.changed'
  | 'relationships.node__event.children'
  | 'relationships.node__event.children.children'
  | 'relationships.node__event.children.id'
  | 'relationships.node__event.created'
  | 'relationships.node__event.default_langcode'
  | 'relationships.node__event.drupal_id'
  | 'relationships.node__event.drupal_internal__nid'
  | 'relationships.node__event.drupal_internal__vid'
  | 'relationships.node__event.field_daterange.end_value'
  | 'relationships.node__event.field_daterange.value'
  | 'relationships.node__event.field_event_link.title'
  | 'relationships.node__event.field_event_link.uri'
  | 'relationships.node__event.id'
  | 'relationships.node__event.internal.content'
  | 'relationships.node__event.internal.contentDigest'
  | 'relationships.node__event.internal.description'
  | 'relationships.node__event.internal.fieldOwners'
  | 'relationships.node__event.internal.ignoreType'
  | 'relationships.node__event.internal.mediaType'
  | 'relationships.node__event.internal.owner'
  | 'relationships.node__event.internal.type'
  | 'relationships.node__event.langcode'
  | 'relationships.node__event.parent.children'
  | 'relationships.node__event.parent.id'
  | 'relationships.node__event.path.alias'
  | 'relationships.node__event.path.langcode'
  | 'relationships.node__event.path.pid'
  | 'relationships.node__event.promote'
  | 'relationships.node__event.revision_timestamp'
  | 'relationships.node__event.revision_translation_affected'
  | 'relationships.node__event.status'
  | 'relationships.node__event.sticky'
  | 'relationships.node__event.title'
  | 'relationships.node__event.unpublish_on'
  | 'relationships.node__kcvv_tv'
  | 'relationships.node__kcvv_tv.changed'
  | 'relationships.node__kcvv_tv.children'
  | 'relationships.node__kcvv_tv.children.children'
  | 'relationships.node__kcvv_tv.children.id'
  | 'relationships.node__kcvv_tv.created'
  | 'relationships.node__kcvv_tv.default_langcode'
  | 'relationships.node__kcvv_tv.drupal_id'
  | 'relationships.node__kcvv_tv.drupal_internal__nid'
  | 'relationships.node__kcvv_tv.drupal_internal__vid'
  | 'relationships.node__kcvv_tv.field_website.title'
  | 'relationships.node__kcvv_tv.field_website.uri'
  | 'relationships.node__kcvv_tv.id'
  | 'relationships.node__kcvv_tv.internal.content'
  | 'relationships.node__kcvv_tv.internal.contentDigest'
  | 'relationships.node__kcvv_tv.internal.description'
  | 'relationships.node__kcvv_tv.internal.fieldOwners'
  | 'relationships.node__kcvv_tv.internal.ignoreType'
  | 'relationships.node__kcvv_tv.internal.mediaType'
  | 'relationships.node__kcvv_tv.internal.owner'
  | 'relationships.node__kcvv_tv.internal.type'
  | 'relationships.node__kcvv_tv.langcode'
  | 'relationships.node__kcvv_tv.parent.children'
  | 'relationships.node__kcvv_tv.parent.id'
  | 'relationships.node__kcvv_tv.path.alias'
  | 'relationships.node__kcvv_tv.path.langcode'
  | 'relationships.node__kcvv_tv.path.pid'
  | 'relationships.node__kcvv_tv.promote'
  | 'relationships.node__kcvv_tv.revision_timestamp'
  | 'relationships.node__kcvv_tv.revision_translation_affected'
  | 'relationships.node__kcvv_tv.status'
  | 'relationships.node__kcvv_tv.sticky'
  | 'relationships.node__kcvv_tv.title'
  | 'relationships.node__page'
  | 'relationships.node__page.body.format'
  | 'relationships.node__page.body.processed'
  | 'relationships.node__page.body.summary'
  | 'relationships.node__page.body.value'
  | 'relationships.node__page.changed'
  | 'relationships.node__page.children'
  | 'relationships.node__page.children.children'
  | 'relationships.node__page.children.id'
  | 'relationships.node__page.created'
  | 'relationships.node__page.default_langcode'
  | 'relationships.node__page.drupal_id'
  | 'relationships.node__page.drupal_internal__nid'
  | 'relationships.node__page.drupal_internal__vid'
  | 'relationships.node__page.id'
  | 'relationships.node__page.internal.content'
  | 'relationships.node__page.internal.contentDigest'
  | 'relationships.node__page.internal.description'
  | 'relationships.node__page.internal.fieldOwners'
  | 'relationships.node__page.internal.ignoreType'
  | 'relationships.node__page.internal.mediaType'
  | 'relationships.node__page.internal.owner'
  | 'relationships.node__page.internal.type'
  | 'relationships.node__page.langcode'
  | 'relationships.node__page.parent.children'
  | 'relationships.node__page.parent.id'
  | 'relationships.node__page.path.alias'
  | 'relationships.node__page.path.langcode'
  | 'relationships.node__page.path.pid'
  | 'relationships.node__page.promote'
  | 'relationships.node__page.revision_timestamp'
  | 'relationships.node__page.revision_translation_affected'
  | 'relationships.node__page.status'
  | 'relationships.node__page.sticky'
  | 'relationships.node__page.title'
  | 'relationships.node__sponsor'
  | 'relationships.node__sponsor.changed'
  | 'relationships.node__sponsor.children'
  | 'relationships.node__sponsor.children.children'
  | 'relationships.node__sponsor.children.id'
  | 'relationships.node__sponsor.created'
  | 'relationships.node__sponsor.default_langcode'
  | 'relationships.node__sponsor.drupal_id'
  | 'relationships.node__sponsor.drupal_internal__nid'
  | 'relationships.node__sponsor.drupal_internal__vid'
  | 'relationships.node__sponsor.field_type'
  | 'relationships.node__sponsor.field_website.title'
  | 'relationships.node__sponsor.field_website.uri'
  | 'relationships.node__sponsor.id'
  | 'relationships.node__sponsor.internal.content'
  | 'relationships.node__sponsor.internal.contentDigest'
  | 'relationships.node__sponsor.internal.description'
  | 'relationships.node__sponsor.internal.fieldOwners'
  | 'relationships.node__sponsor.internal.ignoreType'
  | 'relationships.node__sponsor.internal.mediaType'
  | 'relationships.node__sponsor.internal.owner'
  | 'relationships.node__sponsor.internal.type'
  | 'relationships.node__sponsor.langcode'
  | 'relationships.node__sponsor.parent.children'
  | 'relationships.node__sponsor.parent.id'
  | 'relationships.node__sponsor.path.alias'
  | 'relationships.node__sponsor.path.langcode'
  | 'relationships.node__sponsor.path.pid'
  | 'relationships.node__sponsor.promote'
  | 'relationships.node__sponsor.revision_timestamp'
  | 'relationships.node__sponsor.revision_translation_affected'
  | 'relationships.node__sponsor.status'
  | 'relationships.node__sponsor.sticky'
  | 'relationships.node__sponsor.title'
  | 'relationships.node__team'
  | 'relationships.node__team.changed'
  | 'relationships.node__team.children'
  | 'relationships.node__team.children.children'
  | 'relationships.node__team.children.id'
  | 'relationships.node__team.created'
  | 'relationships.node__team.default_langcode'
  | 'relationships.node__team.drupal_id'
  | 'relationships.node__team.drupal_internal__nid'
  | 'relationships.node__team.drupal_internal__vid'
  | 'relationships.node__team.field_contact_info.format'
  | 'relationships.node__team.field_contact_info.processed'
  | 'relationships.node__team.field_contact_info.value'
  | 'relationships.node__team.field_division_full'
  | 'relationships.node__team.field_fb_id'
  | 'relationships.node__team.field_fb_id_2'
  | 'relationships.node__team.field_staff'
  | 'relationships.node__team.field_tagline'
  | 'relationships.node__team.field_vv_id'
  | 'relationships.node__team.id'
  | 'relationships.node__team.internal.content'
  | 'relationships.node__team.internal.contentDigest'
  | 'relationships.node__team.internal.description'
  | 'relationships.node__team.internal.fieldOwners'
  | 'relationships.node__team.internal.ignoreType'
  | 'relationships.node__team.internal.mediaType'
  | 'relationships.node__team.internal.owner'
  | 'relationships.node__team.internal.type'
  | 'relationships.node__team.langcode'
  | 'relationships.node__team.parent.children'
  | 'relationships.node__team.parent.id'
  | 'relationships.node__team.path.alias'
  | 'relationships.node__team.path.langcode'
  | 'relationships.node__team.path.pid'
  | 'relationships.node__team.promote'
  | 'relationships.node__team.relationships.field_players'
  | 'relationships.node__team.relationships.field_staff'
  | 'relationships.node__team.relationships.node__article'
  | 'relationships.node__team.revision_timestamp'
  | 'relationships.node__team.revision_translation_affected'
  | 'relationships.node__team.status'
  | 'relationships.node__team.sticky'
  | 'relationships.node__team.title'
  | 'relationships.revision_user.children'
  | 'relationships.revision_user.children.children'
  | 'relationships.revision_user.children.id'
  | 'relationships.revision_user.display_name'
  | 'relationships.revision_user.drupal_id'
  | 'relationships.revision_user.id'
  | 'relationships.revision_user.internal.content'
  | 'relationships.revision_user.internal.contentDigest'
  | 'relationships.revision_user.internal.description'
  | 'relationships.revision_user.internal.fieldOwners'
  | 'relationships.revision_user.internal.ignoreType'
  | 'relationships.revision_user.internal.mediaType'
  | 'relationships.revision_user.internal.owner'
  | 'relationships.revision_user.internal.type'
  | 'relationships.revision_user.parent.children'
  | 'relationships.revision_user.parent.id'
  | 'relationships.revision_user.relationships.file__file'
  | 'relationships.revision_user.relationships.media__image'
  | 'relationships.revision_user.relationships.node__article'
  | 'relationships.revision_user.relationships.node__event'
  | 'relationships.revision_user.relationships.node__kcvv_tv'
  | 'relationships.revision_user.relationships.node__page'
  | 'relationships.revision_user.relationships.node__player'
  | 'relationships.revision_user.relationships.node__potw'
  | 'relationships.revision_user.relationships.node__sponsor'
  | 'relationships.revision_user.relationships.node__staff'
  | 'relationships.revision_user.relationships.node__team'
  | 'relationships.thumbnail.changed'
  | 'relationships.thumbnail.children'
  | 'relationships.thumbnail.children.children'
  | 'relationships.thumbnail.children.id'
  | 'relationships.thumbnail.created'
  | 'relationships.thumbnail.drupal_id'
  | 'relationships.thumbnail.drupal_internal__fid'
  | 'relationships.thumbnail.filemime'
  | 'relationships.thumbnail.filename'
  | 'relationships.thumbnail.filesize'
  | 'relationships.thumbnail.id'
  | 'relationships.thumbnail.internal.content'
  | 'relationships.thumbnail.internal.contentDigest'
  | 'relationships.thumbnail.internal.description'
  | 'relationships.thumbnail.internal.fieldOwners'
  | 'relationships.thumbnail.internal.ignoreType'
  | 'relationships.thumbnail.internal.mediaType'
  | 'relationships.thumbnail.internal.owner'
  | 'relationships.thumbnail.internal.type'
  | 'relationships.thumbnail.langcode'
  | 'relationships.thumbnail.localFile.absolutePath'
  | 'relationships.thumbnail.localFile.accessTime'
  | 'relationships.thumbnail.localFile.atime'
  | 'relationships.thumbnail.localFile.atimeMs'
  | 'relationships.thumbnail.localFile.base'
  | 'relationships.thumbnail.localFile.birthTime'
  | 'relationships.thumbnail.localFile.birthtime'
  | 'relationships.thumbnail.localFile.birthtimeMs'
  | 'relationships.thumbnail.localFile.blksize'
  | 'relationships.thumbnail.localFile.blocks'
  | 'relationships.thumbnail.localFile.changeTime'
  | 'relationships.thumbnail.localFile.children'
  | 'relationships.thumbnail.localFile.childrenImageSharp'
  | 'relationships.thumbnail.localFile.ctime'
  | 'relationships.thumbnail.localFile.ctimeMs'
  | 'relationships.thumbnail.localFile.dev'
  | 'relationships.thumbnail.localFile.dir'
  | 'relationships.thumbnail.localFile.ext'
  | 'relationships.thumbnail.localFile.extension'
  | 'relationships.thumbnail.localFile.gid'
  | 'relationships.thumbnail.localFile.id'
  | 'relationships.thumbnail.localFile.ino'
  | 'relationships.thumbnail.localFile.mode'
  | 'relationships.thumbnail.localFile.modifiedTime'
  | 'relationships.thumbnail.localFile.mtime'
  | 'relationships.thumbnail.localFile.mtimeMs'
  | 'relationships.thumbnail.localFile.name'
  | 'relationships.thumbnail.localFile.nlink'
  | 'relationships.thumbnail.localFile.prettySize'
  | 'relationships.thumbnail.localFile.publicURL'
  | 'relationships.thumbnail.localFile.rdev'
  | 'relationships.thumbnail.localFile.relativeDirectory'
  | 'relationships.thumbnail.localFile.relativePath'
  | 'relationships.thumbnail.localFile.root'
  | 'relationships.thumbnail.localFile.size'
  | 'relationships.thumbnail.localFile.sourceInstanceName'
  | 'relationships.thumbnail.localFile.uid'
  | 'relationships.thumbnail.localFile.url'
  | 'relationships.thumbnail.parent.children'
  | 'relationships.thumbnail.parent.id'
  | 'relationships.thumbnail.relationships.media__image'
  | 'relationships.thumbnail.relationships.node__player'
  | 'relationships.thumbnail.relationships.node__staff'
  | 'relationships.thumbnail.status'
  | 'relationships.thumbnail.uri.url'
  | 'relationships.thumbnail.uri.value'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_created'
  | 'revision_translation_affected'
  | 'status'
  | 'thumbnail.alt'
  | 'thumbnail.height'
  | 'thumbnail.width';

type media__imageFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__mid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_media_image: InputMaybe<media__imageField_media_imageFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<media__imagePathFilterInput>;
  readonly relationships: InputMaybe<media__imageRelationshipsFilterInput>;
  readonly revision_created: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly thumbnail: InputMaybe<media__imageThumbnailFilterInput>;
};

type media__imageFilterListInput = {
  readonly elemMatch: InputMaybe<media__imageFilterInput>;
};

type media__imageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<media__imageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<media__imageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<media__image>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type media__imageGroupConnection_distinctArgs = {
  field: media__imageFieldsEnum;
};


type media__imageGroupConnection_groupArgs = {
  field: media__imageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type media__imageGroupConnection_maxArgs = {
  field: media__imageFieldsEnum;
};


type media__imageGroupConnection_minArgs = {
  field: media__imageFieldsEnum;
};


type media__imageGroupConnection_sumArgs = {
  field: media__imageFieldsEnum;
};

type media__imagePath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type media__imagePathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type media__imageRelationships = {
  readonly field_media_image: Maybe<file__file>;
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
  readonly node__event: Maybe<ReadonlyArray<Maybe<node__event>>>;
  readonly node__kcvv_tv: Maybe<ReadonlyArray<Maybe<node__kcvv_tv>>>;
  readonly node__page: Maybe<ReadonlyArray<Maybe<node__page>>>;
  readonly node__sponsor: Maybe<ReadonlyArray<Maybe<node__sponsor>>>;
  readonly node__team: Maybe<ReadonlyArray<Maybe<node__team>>>;
  readonly revision_user: Maybe<user__user>;
  readonly thumbnail: Maybe<file__file>;
  readonly uid: Maybe<user__user>;
};

type media__imageRelationshipsFilterInput = {
  readonly field_media_image: InputMaybe<file__fileFilterInput>;
  readonly node__article: InputMaybe<node__articleFilterListInput>;
  readonly node__event: InputMaybe<node__eventFilterListInput>;
  readonly node__kcvv_tv: InputMaybe<node__kcvv_tvFilterListInput>;
  readonly node__page: InputMaybe<node__pageFilterListInput>;
  readonly node__sponsor: InputMaybe<node__sponsorFilterListInput>;
  readonly node__team: InputMaybe<node__teamFilterListInput>;
  readonly revision_user: InputMaybe<user__userFilterInput>;
  readonly thumbnail: InputMaybe<file__fileFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type media__imageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<media__imageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type media__imageThumbnail = {
  readonly alt: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly width: Maybe<Scalars['Int']>;
};

type media__imageThumbnailFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type node__article = Node & {
  readonly body: Maybe<node__articleBody>;
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_featured: Maybe<Scalars['Boolean']>;
  readonly field_related_content: Maybe<ReadonlyArray<Maybe<node__articleField_related_content>>>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__articlePath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__articleRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__article_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__article_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__article_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__articleBody = {
  readonly format: Maybe<Scalars['String']>;
  readonly processed: Maybe<Scalars['String']>;
  readonly summary: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type node__articleBodyFilterInput = {
  readonly format: InputMaybe<StringQueryOperatorInput>;
  readonly processed: InputMaybe<StringQueryOperatorInput>;
  readonly summary: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type node__articleConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__articleEdge>;
  readonly group: ReadonlyArray<node__articleGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__article>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__articleConnection_distinctArgs = {
  field: node__articleFieldsEnum;
};


type node__articleConnection_groupArgs = {
  field: node__articleFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__articleConnection_maxArgs = {
  field: node__articleFieldsEnum;
};


type node__articleConnection_minArgs = {
  field: node__articleFieldsEnum;
};


type node__articleConnection_sumArgs = {
  field: node__articleFieldsEnum;
};

type node__articleEdge = {
  readonly next: Maybe<node__article>;
  readonly node: node__article;
  readonly previous: Maybe<node__article>;
};

type node__articleField_related_content = {
  readonly links: Maybe<node__articleField_related_contentLinks>;
};

type node__articleField_related_contentFilterInput = {
  readonly links: InputMaybe<node__articleField_related_contentLinksFilterInput>;
};

type node__articleField_related_contentFilterListInput = {
  readonly elemMatch: InputMaybe<node__articleField_related_contentFilterInput>;
};

type node__articleField_related_contentLinks = {
  readonly help: Maybe<node__articleField_related_contentLinksHelp>;
};

type node__articleField_related_contentLinksFilterInput = {
  readonly help: InputMaybe<node__articleField_related_contentLinksHelpFilterInput>;
};

type node__articleField_related_contentLinksHelp = {
  readonly href: Maybe<Scalars['String']>;
  readonly meta: Maybe<node__articleField_related_contentLinksHelpMeta>;
};

type node__articleField_related_contentLinksHelpFilterInput = {
  readonly href: InputMaybe<StringQueryOperatorInput>;
  readonly meta: InputMaybe<node__articleField_related_contentLinksHelpMetaFilterInput>;
};

type node__articleField_related_contentLinksHelpMeta = {
  readonly about: Maybe<Scalars['String']>;
};

type node__articleField_related_contentLinksHelpMetaFilterInput = {
  readonly about: InputMaybe<StringQueryOperatorInput>;
};

type node__articleFieldsEnum =
  | 'body.format'
  | 'body.processed'
  | 'body.summary'
  | 'body.value'
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_featured'
  | 'field_related_content'
  | 'field_related_content.links.help.href'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_media_article_image.changed'
  | 'relationships.field_media_article_image.children'
  | 'relationships.field_media_article_image.children.children'
  | 'relationships.field_media_article_image.children.id'
  | 'relationships.field_media_article_image.created'
  | 'relationships.field_media_article_image.default_langcode'
  | 'relationships.field_media_article_image.drupal_id'
  | 'relationships.field_media_article_image.drupal_internal__mid'
  | 'relationships.field_media_article_image.drupal_internal__vid'
  | 'relationships.field_media_article_image.field_media_image.alt'
  | 'relationships.field_media_article_image.field_media_image.height'
  | 'relationships.field_media_article_image.field_media_image.title'
  | 'relationships.field_media_article_image.field_media_image.width'
  | 'relationships.field_media_article_image.id'
  | 'relationships.field_media_article_image.internal.content'
  | 'relationships.field_media_article_image.internal.contentDigest'
  | 'relationships.field_media_article_image.internal.description'
  | 'relationships.field_media_article_image.internal.fieldOwners'
  | 'relationships.field_media_article_image.internal.ignoreType'
  | 'relationships.field_media_article_image.internal.mediaType'
  | 'relationships.field_media_article_image.internal.owner'
  | 'relationships.field_media_article_image.internal.type'
  | 'relationships.field_media_article_image.langcode'
  | 'relationships.field_media_article_image.name'
  | 'relationships.field_media_article_image.parent.children'
  | 'relationships.field_media_article_image.parent.id'
  | 'relationships.field_media_article_image.path.alias'
  | 'relationships.field_media_article_image.path.langcode'
  | 'relationships.field_media_article_image.path.pid'
  | 'relationships.field_media_article_image.relationships.node__article'
  | 'relationships.field_media_article_image.relationships.node__event'
  | 'relationships.field_media_article_image.relationships.node__kcvv_tv'
  | 'relationships.field_media_article_image.relationships.node__page'
  | 'relationships.field_media_article_image.relationships.node__sponsor'
  | 'relationships.field_media_article_image.relationships.node__team'
  | 'relationships.field_media_article_image.revision_created'
  | 'relationships.field_media_article_image.revision_translation_affected'
  | 'relationships.field_media_article_image.status'
  | 'relationships.field_media_article_image.thumbnail.alt'
  | 'relationships.field_media_article_image.thumbnail.height'
  | 'relationships.field_media_article_image.thumbnail.width'
  | 'relationships.field_tags'
  | 'relationships.field_tags.changed'
  | 'relationships.field_tags.children'
  | 'relationships.field_tags.children.children'
  | 'relationships.field_tags.children.id'
  | 'relationships.field_tags.default_langcode'
  | 'relationships.field_tags.drupal_id'
  | 'relationships.field_tags.drupal_internal__revision_id'
  | 'relationships.field_tags.drupal_internal__tid'
  | 'relationships.field_tags.id'
  | 'relationships.field_tags.internal.content'
  | 'relationships.field_tags.internal.contentDigest'
  | 'relationships.field_tags.internal.description'
  | 'relationships.field_tags.internal.fieldOwners'
  | 'relationships.field_tags.internal.ignoreType'
  | 'relationships.field_tags.internal.mediaType'
  | 'relationships.field_tags.internal.owner'
  | 'relationships.field_tags.internal.type'
  | 'relationships.field_tags.langcode'
  | 'relationships.field_tags.name'
  | 'relationships.field_tags.parent.children'
  | 'relationships.field_tags.parent.id'
  | 'relationships.field_tags.path.alias'
  | 'relationships.field_tags.path.langcode'
  | 'relationships.field_tags.path.pid'
  | 'relationships.field_tags.relationships.node__article'
  | 'relationships.field_tags.revision_created'
  | 'relationships.field_tags.revision_translation_affected'
  | 'relationships.field_tags.status'
  | 'relationships.field_tags.weight'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__articleFilterInput = {
  readonly body: InputMaybe<node__articleBodyFilterInput>;
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_featured: InputMaybe<BooleanQueryOperatorInput>;
  readonly field_related_content: InputMaybe<node__articleField_related_contentFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__articlePathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__articleRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__articleFilterListInput = {
  readonly elemMatch: InputMaybe<node__articleFilterInput>;
};

type node__articleGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__articleEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__articleGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__article>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__articleGroupConnection_distinctArgs = {
  field: node__articleFieldsEnum;
};


type node__articleGroupConnection_groupArgs = {
  field: node__articleFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__articleGroupConnection_maxArgs = {
  field: node__articleFieldsEnum;
};


type node__articleGroupConnection_minArgs = {
  field: node__articleFieldsEnum;
};


type node__articleGroupConnection_sumArgs = {
  field: node__articleFieldsEnum;
};

type node__articlePath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__articlePathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__articleRelationships = {
  readonly field_media_article_image: Maybe<media__image>;
  readonly field_related_content: Maybe<ReadonlyArray<Maybe<node__articlenode__playernode__staffnode__teamUnion>>>;
  readonly field_tags: Maybe<ReadonlyArray<Maybe<taxonomy_term__category>>>;
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__articleRelationshipsFilterInput = {
  readonly field_media_article_image: InputMaybe<media__imageFilterInput>;
  readonly field_tags: InputMaybe<taxonomy_term__categoryFilterListInput>;
  readonly node__article: InputMaybe<node__articleFilterListInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__articleSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__articleFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__articlenode__playernode__staffnode__teamUnion = node__article | node__player | node__staff | node__team;

type node__event = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_daterange: Maybe<node__eventField_daterange>;
  readonly field_event_link: Maybe<node__eventField_event_link>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__eventPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__eventRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
  readonly unpublish_on: Maybe<Scalars['Date']>;
};


type node__event_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__event_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__event_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__event_unpublish_onArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__eventConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__eventEdge>;
  readonly group: ReadonlyArray<node__eventGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__event>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__eventConnection_distinctArgs = {
  field: node__eventFieldsEnum;
};


type node__eventConnection_groupArgs = {
  field: node__eventFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__eventConnection_maxArgs = {
  field: node__eventFieldsEnum;
};


type node__eventConnection_minArgs = {
  field: node__eventFieldsEnum;
};


type node__eventConnection_sumArgs = {
  field: node__eventFieldsEnum;
};

type node__eventEdge = {
  readonly next: Maybe<node__event>;
  readonly node: node__event;
  readonly previous: Maybe<node__event>;
};

type node__eventField_daterange = {
  readonly end_value: Maybe<Scalars['Date']>;
  readonly value: Maybe<Scalars['Date']>;
};


type node__eventField_daterange_end_valueArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__eventField_daterange_valueArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__eventField_daterangeFilterInput = {
  readonly end_value: InputMaybe<DateQueryOperatorInput>;
  readonly value: InputMaybe<DateQueryOperatorInput>;
};

type node__eventField_event_link = {
  readonly title: Maybe<Scalars['String']>;
  readonly uri: Maybe<Scalars['String']>;
};

type node__eventField_event_linkFilterInput = {
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly uri: InputMaybe<StringQueryOperatorInput>;
};

type node__eventFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_daterange.end_value'
  | 'field_daterange.value'
  | 'field_event_link.title'
  | 'field_event_link.uri'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_media_image.changed'
  | 'relationships.field_media_image.children'
  | 'relationships.field_media_image.children.children'
  | 'relationships.field_media_image.children.id'
  | 'relationships.field_media_image.created'
  | 'relationships.field_media_image.default_langcode'
  | 'relationships.field_media_image.drupal_id'
  | 'relationships.field_media_image.drupal_internal__mid'
  | 'relationships.field_media_image.drupal_internal__vid'
  | 'relationships.field_media_image.field_media_image.alt'
  | 'relationships.field_media_image.field_media_image.height'
  | 'relationships.field_media_image.field_media_image.title'
  | 'relationships.field_media_image.field_media_image.width'
  | 'relationships.field_media_image.id'
  | 'relationships.field_media_image.internal.content'
  | 'relationships.field_media_image.internal.contentDigest'
  | 'relationships.field_media_image.internal.description'
  | 'relationships.field_media_image.internal.fieldOwners'
  | 'relationships.field_media_image.internal.ignoreType'
  | 'relationships.field_media_image.internal.mediaType'
  | 'relationships.field_media_image.internal.owner'
  | 'relationships.field_media_image.internal.type'
  | 'relationships.field_media_image.langcode'
  | 'relationships.field_media_image.name'
  | 'relationships.field_media_image.parent.children'
  | 'relationships.field_media_image.parent.id'
  | 'relationships.field_media_image.path.alias'
  | 'relationships.field_media_image.path.langcode'
  | 'relationships.field_media_image.path.pid'
  | 'relationships.field_media_image.relationships.node__article'
  | 'relationships.field_media_image.relationships.node__event'
  | 'relationships.field_media_image.relationships.node__kcvv_tv'
  | 'relationships.field_media_image.relationships.node__page'
  | 'relationships.field_media_image.relationships.node__sponsor'
  | 'relationships.field_media_image.relationships.node__team'
  | 'relationships.field_media_image.revision_created'
  | 'relationships.field_media_image.revision_translation_affected'
  | 'relationships.field_media_image.status'
  | 'relationships.field_media_image.thumbnail.alt'
  | 'relationships.field_media_image.thumbnail.height'
  | 'relationships.field_media_image.thumbnail.width'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title'
  | 'unpublish_on';

type node__eventFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_daterange: InputMaybe<node__eventField_daterangeFilterInput>;
  readonly field_event_link: InputMaybe<node__eventField_event_linkFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__eventPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__eventRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly unpublish_on: InputMaybe<DateQueryOperatorInput>;
};

type node__eventFilterListInput = {
  readonly elemMatch: InputMaybe<node__eventFilterInput>;
};

type node__eventGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__eventEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__eventGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__event>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__eventGroupConnection_distinctArgs = {
  field: node__eventFieldsEnum;
};


type node__eventGroupConnection_groupArgs = {
  field: node__eventFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__eventGroupConnection_maxArgs = {
  field: node__eventFieldsEnum;
};


type node__eventGroupConnection_minArgs = {
  field: node__eventFieldsEnum;
};


type node__eventGroupConnection_sumArgs = {
  field: node__eventFieldsEnum;
};

type node__eventPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__eventPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__eventRelationships = {
  readonly field_media_image: Maybe<media__image>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__eventRelationshipsFilterInput = {
  readonly field_media_image: InputMaybe<media__imageFilterInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__eventSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__eventFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__kcvv_tv = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_website: Maybe<node__kcvv_tvField_website>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__kcvv_tvPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__kcvv_tvRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__kcvv_tv_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__kcvv_tv_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__kcvv_tv_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__kcvv_tvConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__kcvv_tvEdge>;
  readonly group: ReadonlyArray<node__kcvv_tvGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__kcvv_tv>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__kcvv_tvConnection_distinctArgs = {
  field: node__kcvv_tvFieldsEnum;
};


type node__kcvv_tvConnection_groupArgs = {
  field: node__kcvv_tvFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__kcvv_tvConnection_maxArgs = {
  field: node__kcvv_tvFieldsEnum;
};


type node__kcvv_tvConnection_minArgs = {
  field: node__kcvv_tvFieldsEnum;
};


type node__kcvv_tvConnection_sumArgs = {
  field: node__kcvv_tvFieldsEnum;
};

type node__kcvv_tvEdge = {
  readonly next: Maybe<node__kcvv_tv>;
  readonly node: node__kcvv_tv;
  readonly previous: Maybe<node__kcvv_tv>;
};

type node__kcvv_tvField_website = {
  readonly title: Maybe<Scalars['String']>;
  readonly uri: Maybe<Scalars['String']>;
};

type node__kcvv_tvField_websiteFilterInput = {
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly uri: InputMaybe<StringQueryOperatorInput>;
};

type node__kcvv_tvFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_website.title'
  | 'field_website.uri'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_media_article_image.changed'
  | 'relationships.field_media_article_image.children'
  | 'relationships.field_media_article_image.children.children'
  | 'relationships.field_media_article_image.children.id'
  | 'relationships.field_media_article_image.created'
  | 'relationships.field_media_article_image.default_langcode'
  | 'relationships.field_media_article_image.drupal_id'
  | 'relationships.field_media_article_image.drupal_internal__mid'
  | 'relationships.field_media_article_image.drupal_internal__vid'
  | 'relationships.field_media_article_image.field_media_image.alt'
  | 'relationships.field_media_article_image.field_media_image.height'
  | 'relationships.field_media_article_image.field_media_image.title'
  | 'relationships.field_media_article_image.field_media_image.width'
  | 'relationships.field_media_article_image.id'
  | 'relationships.field_media_article_image.internal.content'
  | 'relationships.field_media_article_image.internal.contentDigest'
  | 'relationships.field_media_article_image.internal.description'
  | 'relationships.field_media_article_image.internal.fieldOwners'
  | 'relationships.field_media_article_image.internal.ignoreType'
  | 'relationships.field_media_article_image.internal.mediaType'
  | 'relationships.field_media_article_image.internal.owner'
  | 'relationships.field_media_article_image.internal.type'
  | 'relationships.field_media_article_image.langcode'
  | 'relationships.field_media_article_image.name'
  | 'relationships.field_media_article_image.parent.children'
  | 'relationships.field_media_article_image.parent.id'
  | 'relationships.field_media_article_image.path.alias'
  | 'relationships.field_media_article_image.path.langcode'
  | 'relationships.field_media_article_image.path.pid'
  | 'relationships.field_media_article_image.relationships.node__article'
  | 'relationships.field_media_article_image.relationships.node__event'
  | 'relationships.field_media_article_image.relationships.node__kcvv_tv'
  | 'relationships.field_media_article_image.relationships.node__page'
  | 'relationships.field_media_article_image.relationships.node__sponsor'
  | 'relationships.field_media_article_image.relationships.node__team'
  | 'relationships.field_media_article_image.revision_created'
  | 'relationships.field_media_article_image.revision_translation_affected'
  | 'relationships.field_media_article_image.status'
  | 'relationships.field_media_article_image.thumbnail.alt'
  | 'relationships.field_media_article_image.thumbnail.height'
  | 'relationships.field_media_article_image.thumbnail.width'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__kcvv_tvFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_website: InputMaybe<node__kcvv_tvField_websiteFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__kcvv_tvPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__kcvv_tvRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__kcvv_tvFilterListInput = {
  readonly elemMatch: InputMaybe<node__kcvv_tvFilterInput>;
};

type node__kcvv_tvGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__kcvv_tvEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__kcvv_tvGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__kcvv_tv>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__kcvv_tvGroupConnection_distinctArgs = {
  field: node__kcvv_tvFieldsEnum;
};


type node__kcvv_tvGroupConnection_groupArgs = {
  field: node__kcvv_tvFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__kcvv_tvGroupConnection_maxArgs = {
  field: node__kcvv_tvFieldsEnum;
};


type node__kcvv_tvGroupConnection_minArgs = {
  field: node__kcvv_tvFieldsEnum;
};


type node__kcvv_tvGroupConnection_sumArgs = {
  field: node__kcvv_tvFieldsEnum;
};

type node__kcvv_tvPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__kcvv_tvPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__kcvv_tvRelationships = {
  readonly field_media_article_image: Maybe<media__image>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__kcvv_tvRelationshipsFilterInput = {
  readonly field_media_article_image: InputMaybe<media__imageFilterInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__kcvv_tvSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__kcvv_tvFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__page = Node & {
  readonly body: Maybe<node__pageBody>;
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__pagePath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__pageRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__page_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__page_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__page_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__pageBody = {
  readonly format: Maybe<Scalars['String']>;
  readonly processed: Maybe<Scalars['String']>;
  readonly summary: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type node__pageBodyFilterInput = {
  readonly format: InputMaybe<StringQueryOperatorInput>;
  readonly processed: InputMaybe<StringQueryOperatorInput>;
  readonly summary: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type node__pageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__pageEdge>;
  readonly group: ReadonlyArray<node__pageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__page>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__pageConnection_distinctArgs = {
  field: node__pageFieldsEnum;
};


type node__pageConnection_groupArgs = {
  field: node__pageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__pageConnection_maxArgs = {
  field: node__pageFieldsEnum;
};


type node__pageConnection_minArgs = {
  field: node__pageFieldsEnum;
};


type node__pageConnection_sumArgs = {
  field: node__pageFieldsEnum;
};

type node__pageEdge = {
  readonly next: Maybe<node__page>;
  readonly node: node__page;
  readonly previous: Maybe<node__page>;
};

type node__pageFieldsEnum =
  | 'body.format'
  | 'body.processed'
  | 'body.summary'
  | 'body.value'
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_media_article_image.changed'
  | 'relationships.field_media_article_image.children'
  | 'relationships.field_media_article_image.children.children'
  | 'relationships.field_media_article_image.children.id'
  | 'relationships.field_media_article_image.created'
  | 'relationships.field_media_article_image.default_langcode'
  | 'relationships.field_media_article_image.drupal_id'
  | 'relationships.field_media_article_image.drupal_internal__mid'
  | 'relationships.field_media_article_image.drupal_internal__vid'
  | 'relationships.field_media_article_image.field_media_image.alt'
  | 'relationships.field_media_article_image.field_media_image.height'
  | 'relationships.field_media_article_image.field_media_image.title'
  | 'relationships.field_media_article_image.field_media_image.width'
  | 'relationships.field_media_article_image.id'
  | 'relationships.field_media_article_image.internal.content'
  | 'relationships.field_media_article_image.internal.contentDigest'
  | 'relationships.field_media_article_image.internal.description'
  | 'relationships.field_media_article_image.internal.fieldOwners'
  | 'relationships.field_media_article_image.internal.ignoreType'
  | 'relationships.field_media_article_image.internal.mediaType'
  | 'relationships.field_media_article_image.internal.owner'
  | 'relationships.field_media_article_image.internal.type'
  | 'relationships.field_media_article_image.langcode'
  | 'relationships.field_media_article_image.name'
  | 'relationships.field_media_article_image.parent.children'
  | 'relationships.field_media_article_image.parent.id'
  | 'relationships.field_media_article_image.path.alias'
  | 'relationships.field_media_article_image.path.langcode'
  | 'relationships.field_media_article_image.path.pid'
  | 'relationships.field_media_article_image.relationships.node__article'
  | 'relationships.field_media_article_image.relationships.node__event'
  | 'relationships.field_media_article_image.relationships.node__kcvv_tv'
  | 'relationships.field_media_article_image.relationships.node__page'
  | 'relationships.field_media_article_image.relationships.node__sponsor'
  | 'relationships.field_media_article_image.relationships.node__team'
  | 'relationships.field_media_article_image.revision_created'
  | 'relationships.field_media_article_image.revision_translation_affected'
  | 'relationships.field_media_article_image.status'
  | 'relationships.field_media_article_image.thumbnail.alt'
  | 'relationships.field_media_article_image.thumbnail.height'
  | 'relationships.field_media_article_image.thumbnail.width'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__pageFilterInput = {
  readonly body: InputMaybe<node__pageBodyFilterInput>;
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__pagePathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__pageRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__pageFilterListInput = {
  readonly elemMatch: InputMaybe<node__pageFilterInput>;
};

type node__pageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__pageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__pageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__page>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__pageGroupConnection_distinctArgs = {
  field: node__pageFieldsEnum;
};


type node__pageGroupConnection_groupArgs = {
  field: node__pageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__pageGroupConnection_maxArgs = {
  field: node__pageFieldsEnum;
};


type node__pageGroupConnection_minArgs = {
  field: node__pageFieldsEnum;
};


type node__pageGroupConnection_sumArgs = {
  field: node__pageFieldsEnum;
};

type node__pagePath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__pagePathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__pageRelationships = {
  readonly field_media_article_image: Maybe<media__image>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__pageRelationshipsFilterInput = {
  readonly field_media_article_image: InputMaybe<media__imageFilterInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__pageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__pageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__player = Node & {
  readonly body: Maybe<node__playerBody>;
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_birth_date: Maybe<Scalars['Date']>;
  readonly field_date_leave: Maybe<Scalars['Date']>;
  readonly field_firstname: Maybe<Scalars['String']>;
  readonly field_image: Maybe<node__playerField_image>;
  readonly field_image_celebrate: Maybe<node__playerField_image_celebrate>;
  readonly field_join_date: Maybe<Scalars['Date']>;
  readonly field_lastname: Maybe<Scalars['String']>;
  readonly field_position: Maybe<Scalars['String']>;
  readonly field_shirtnumber: Maybe<Scalars['Int']>;
  readonly field_vv_id: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__playerPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__playerRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__player_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__player_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__player_field_birth_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__player_field_date_leaveArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__player_field_join_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__player_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__playerBody = {
  readonly format: Maybe<Scalars['String']>;
  readonly processed: Maybe<Scalars['String']>;
  readonly summary: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type node__playerBodyFilterInput = {
  readonly format: InputMaybe<StringQueryOperatorInput>;
  readonly processed: InputMaybe<StringQueryOperatorInput>;
  readonly summary: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type node__playerConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__playerEdge>;
  readonly group: ReadonlyArray<node__playerGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__player>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__playerConnection_distinctArgs = {
  field: node__playerFieldsEnum;
};


type node__playerConnection_groupArgs = {
  field: node__playerFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__playerConnection_maxArgs = {
  field: node__playerFieldsEnum;
};


type node__playerConnection_minArgs = {
  field: node__playerFieldsEnum;
};


type node__playerConnection_sumArgs = {
  field: node__playerFieldsEnum;
};

type node__playerEdge = {
  readonly next: Maybe<node__player>;
  readonly node: node__player;
  readonly previous: Maybe<node__player>;
};

type node__playerField_image = {
  readonly alt: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly title: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type node__playerField_imageFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type node__playerField_image_celebrate = {
  readonly alt: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly title: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type node__playerField_image_celebrateFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type node__playerFieldsEnum =
  | 'body.format'
  | 'body.processed'
  | 'body.summary'
  | 'body.value'
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_birth_date'
  | 'field_date_leave'
  | 'field_firstname'
  | 'field_image.alt'
  | 'field_image.height'
  | 'field_image.title'
  | 'field_image.width'
  | 'field_image_celebrate.alt'
  | 'field_image_celebrate.height'
  | 'field_image_celebrate.title'
  | 'field_image_celebrate.width'
  | 'field_join_date'
  | 'field_lastname'
  | 'field_position'
  | 'field_shirtnumber'
  | 'field_vv_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_image.changed'
  | 'relationships.field_image.children'
  | 'relationships.field_image.children.children'
  | 'relationships.field_image.children.id'
  | 'relationships.field_image.created'
  | 'relationships.field_image.drupal_id'
  | 'relationships.field_image.drupal_internal__fid'
  | 'relationships.field_image.filemime'
  | 'relationships.field_image.filename'
  | 'relationships.field_image.filesize'
  | 'relationships.field_image.id'
  | 'relationships.field_image.internal.content'
  | 'relationships.field_image.internal.contentDigest'
  | 'relationships.field_image.internal.description'
  | 'relationships.field_image.internal.fieldOwners'
  | 'relationships.field_image.internal.ignoreType'
  | 'relationships.field_image.internal.mediaType'
  | 'relationships.field_image.internal.owner'
  | 'relationships.field_image.internal.type'
  | 'relationships.field_image.langcode'
  | 'relationships.field_image.localFile.absolutePath'
  | 'relationships.field_image.localFile.accessTime'
  | 'relationships.field_image.localFile.atime'
  | 'relationships.field_image.localFile.atimeMs'
  | 'relationships.field_image.localFile.base'
  | 'relationships.field_image.localFile.birthTime'
  | 'relationships.field_image.localFile.birthtime'
  | 'relationships.field_image.localFile.birthtimeMs'
  | 'relationships.field_image.localFile.blksize'
  | 'relationships.field_image.localFile.blocks'
  | 'relationships.field_image.localFile.changeTime'
  | 'relationships.field_image.localFile.children'
  | 'relationships.field_image.localFile.childrenImageSharp'
  | 'relationships.field_image.localFile.ctime'
  | 'relationships.field_image.localFile.ctimeMs'
  | 'relationships.field_image.localFile.dev'
  | 'relationships.field_image.localFile.dir'
  | 'relationships.field_image.localFile.ext'
  | 'relationships.field_image.localFile.extension'
  | 'relationships.field_image.localFile.gid'
  | 'relationships.field_image.localFile.id'
  | 'relationships.field_image.localFile.ino'
  | 'relationships.field_image.localFile.mode'
  | 'relationships.field_image.localFile.modifiedTime'
  | 'relationships.field_image.localFile.mtime'
  | 'relationships.field_image.localFile.mtimeMs'
  | 'relationships.field_image.localFile.name'
  | 'relationships.field_image.localFile.nlink'
  | 'relationships.field_image.localFile.prettySize'
  | 'relationships.field_image.localFile.publicURL'
  | 'relationships.field_image.localFile.rdev'
  | 'relationships.field_image.localFile.relativeDirectory'
  | 'relationships.field_image.localFile.relativePath'
  | 'relationships.field_image.localFile.root'
  | 'relationships.field_image.localFile.size'
  | 'relationships.field_image.localFile.sourceInstanceName'
  | 'relationships.field_image.localFile.uid'
  | 'relationships.field_image.localFile.url'
  | 'relationships.field_image.parent.children'
  | 'relationships.field_image.parent.id'
  | 'relationships.field_image.relationships.media__image'
  | 'relationships.field_image.relationships.node__player'
  | 'relationships.field_image.relationships.node__staff'
  | 'relationships.field_image.status'
  | 'relationships.field_image.uri.url'
  | 'relationships.field_image.uri.value'
  | 'relationships.field_image_celebrate.changed'
  | 'relationships.field_image_celebrate.children'
  | 'relationships.field_image_celebrate.children.children'
  | 'relationships.field_image_celebrate.children.id'
  | 'relationships.field_image_celebrate.created'
  | 'relationships.field_image_celebrate.drupal_id'
  | 'relationships.field_image_celebrate.drupal_internal__fid'
  | 'relationships.field_image_celebrate.filemime'
  | 'relationships.field_image_celebrate.filename'
  | 'relationships.field_image_celebrate.filesize'
  | 'relationships.field_image_celebrate.id'
  | 'relationships.field_image_celebrate.internal.content'
  | 'relationships.field_image_celebrate.internal.contentDigest'
  | 'relationships.field_image_celebrate.internal.description'
  | 'relationships.field_image_celebrate.internal.fieldOwners'
  | 'relationships.field_image_celebrate.internal.ignoreType'
  | 'relationships.field_image_celebrate.internal.mediaType'
  | 'relationships.field_image_celebrate.internal.owner'
  | 'relationships.field_image_celebrate.internal.type'
  | 'relationships.field_image_celebrate.langcode'
  | 'relationships.field_image_celebrate.localFile.absolutePath'
  | 'relationships.field_image_celebrate.localFile.accessTime'
  | 'relationships.field_image_celebrate.localFile.atime'
  | 'relationships.field_image_celebrate.localFile.atimeMs'
  | 'relationships.field_image_celebrate.localFile.base'
  | 'relationships.field_image_celebrate.localFile.birthTime'
  | 'relationships.field_image_celebrate.localFile.birthtime'
  | 'relationships.field_image_celebrate.localFile.birthtimeMs'
  | 'relationships.field_image_celebrate.localFile.blksize'
  | 'relationships.field_image_celebrate.localFile.blocks'
  | 'relationships.field_image_celebrate.localFile.changeTime'
  | 'relationships.field_image_celebrate.localFile.children'
  | 'relationships.field_image_celebrate.localFile.childrenImageSharp'
  | 'relationships.field_image_celebrate.localFile.ctime'
  | 'relationships.field_image_celebrate.localFile.ctimeMs'
  | 'relationships.field_image_celebrate.localFile.dev'
  | 'relationships.field_image_celebrate.localFile.dir'
  | 'relationships.field_image_celebrate.localFile.ext'
  | 'relationships.field_image_celebrate.localFile.extension'
  | 'relationships.field_image_celebrate.localFile.gid'
  | 'relationships.field_image_celebrate.localFile.id'
  | 'relationships.field_image_celebrate.localFile.ino'
  | 'relationships.field_image_celebrate.localFile.mode'
  | 'relationships.field_image_celebrate.localFile.modifiedTime'
  | 'relationships.field_image_celebrate.localFile.mtime'
  | 'relationships.field_image_celebrate.localFile.mtimeMs'
  | 'relationships.field_image_celebrate.localFile.name'
  | 'relationships.field_image_celebrate.localFile.nlink'
  | 'relationships.field_image_celebrate.localFile.prettySize'
  | 'relationships.field_image_celebrate.localFile.publicURL'
  | 'relationships.field_image_celebrate.localFile.rdev'
  | 'relationships.field_image_celebrate.localFile.relativeDirectory'
  | 'relationships.field_image_celebrate.localFile.relativePath'
  | 'relationships.field_image_celebrate.localFile.root'
  | 'relationships.field_image_celebrate.localFile.size'
  | 'relationships.field_image_celebrate.localFile.sourceInstanceName'
  | 'relationships.field_image_celebrate.localFile.uid'
  | 'relationships.field_image_celebrate.localFile.url'
  | 'relationships.field_image_celebrate.parent.children'
  | 'relationships.field_image_celebrate.parent.id'
  | 'relationships.field_image_celebrate.relationships.media__image'
  | 'relationships.field_image_celebrate.relationships.node__player'
  | 'relationships.field_image_celebrate.relationships.node__staff'
  | 'relationships.field_image_celebrate.status'
  | 'relationships.field_image_celebrate.uri.url'
  | 'relationships.field_image_celebrate.uri.value'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'relationships.node__potw'
  | 'relationships.node__potw.changed'
  | 'relationships.node__potw.children'
  | 'relationships.node__potw.children.children'
  | 'relationships.node__potw.children.id'
  | 'relationships.node__potw.created'
  | 'relationships.node__potw.default_langcode'
  | 'relationships.node__potw.drupal_id'
  | 'relationships.node__potw.drupal_internal__nid'
  | 'relationships.node__potw.drupal_internal__vid'
  | 'relationships.node__potw.id'
  | 'relationships.node__potw.internal.content'
  | 'relationships.node__potw.internal.contentDigest'
  | 'relationships.node__potw.internal.description'
  | 'relationships.node__potw.internal.fieldOwners'
  | 'relationships.node__potw.internal.ignoreType'
  | 'relationships.node__potw.internal.mediaType'
  | 'relationships.node__potw.internal.owner'
  | 'relationships.node__potw.internal.type'
  | 'relationships.node__potw.langcode'
  | 'relationships.node__potw.parent.children'
  | 'relationships.node__potw.parent.id'
  | 'relationships.node__potw.path.langcode'
  | 'relationships.node__potw.promote'
  | 'relationships.node__potw.revision_timestamp'
  | 'relationships.node__potw.revision_translation_affected'
  | 'relationships.node__potw.status'
  | 'relationships.node__potw.sticky'
  | 'relationships.node__potw.title'
  | 'relationships.node__team'
  | 'relationships.node__team.changed'
  | 'relationships.node__team.children'
  | 'relationships.node__team.children.children'
  | 'relationships.node__team.children.id'
  | 'relationships.node__team.created'
  | 'relationships.node__team.default_langcode'
  | 'relationships.node__team.drupal_id'
  | 'relationships.node__team.drupal_internal__nid'
  | 'relationships.node__team.drupal_internal__vid'
  | 'relationships.node__team.field_contact_info.format'
  | 'relationships.node__team.field_contact_info.processed'
  | 'relationships.node__team.field_contact_info.value'
  | 'relationships.node__team.field_division_full'
  | 'relationships.node__team.field_fb_id'
  | 'relationships.node__team.field_fb_id_2'
  | 'relationships.node__team.field_staff'
  | 'relationships.node__team.field_tagline'
  | 'relationships.node__team.field_vv_id'
  | 'relationships.node__team.id'
  | 'relationships.node__team.internal.content'
  | 'relationships.node__team.internal.contentDigest'
  | 'relationships.node__team.internal.description'
  | 'relationships.node__team.internal.fieldOwners'
  | 'relationships.node__team.internal.ignoreType'
  | 'relationships.node__team.internal.mediaType'
  | 'relationships.node__team.internal.owner'
  | 'relationships.node__team.internal.type'
  | 'relationships.node__team.langcode'
  | 'relationships.node__team.parent.children'
  | 'relationships.node__team.parent.id'
  | 'relationships.node__team.path.alias'
  | 'relationships.node__team.path.langcode'
  | 'relationships.node__team.path.pid'
  | 'relationships.node__team.promote'
  | 'relationships.node__team.relationships.field_players'
  | 'relationships.node__team.relationships.field_staff'
  | 'relationships.node__team.relationships.node__article'
  | 'relationships.node__team.revision_timestamp'
  | 'relationships.node__team.revision_translation_affected'
  | 'relationships.node__team.status'
  | 'relationships.node__team.sticky'
  | 'relationships.node__team.title'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__playerFilterInput = {
  readonly body: InputMaybe<node__playerBodyFilterInput>;
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_birth_date: InputMaybe<DateQueryOperatorInput>;
  readonly field_date_leave: InputMaybe<DateQueryOperatorInput>;
  readonly field_firstname: InputMaybe<StringQueryOperatorInput>;
  readonly field_image: InputMaybe<node__playerField_imageFilterInput>;
  readonly field_image_celebrate: InputMaybe<node__playerField_image_celebrateFilterInput>;
  readonly field_join_date: InputMaybe<DateQueryOperatorInput>;
  readonly field_lastname: InputMaybe<StringQueryOperatorInput>;
  readonly field_position: InputMaybe<StringQueryOperatorInput>;
  readonly field_shirtnumber: InputMaybe<IntQueryOperatorInput>;
  readonly field_vv_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__playerPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__playerRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__playerFilterListInput = {
  readonly elemMatch: InputMaybe<node__playerFilterInput>;
};

type node__playerGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__playerEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__playerGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__player>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__playerGroupConnection_distinctArgs = {
  field: node__playerFieldsEnum;
};


type node__playerGroupConnection_groupArgs = {
  field: node__playerFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__playerGroupConnection_maxArgs = {
  field: node__playerFieldsEnum;
};


type node__playerGroupConnection_minArgs = {
  field: node__playerFieldsEnum;
};


type node__playerGroupConnection_sumArgs = {
  field: node__playerFieldsEnum;
};

type node__playerPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__playerPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__playerRelationships = {
  readonly field_image: Maybe<file__file>;
  readonly field_image_celebrate: Maybe<file__file>;
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
  readonly node__potw: Maybe<ReadonlyArray<Maybe<node__potw>>>;
  readonly node__team: Maybe<ReadonlyArray<Maybe<node__team>>>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__playerRelationshipsFilterInput = {
  readonly field_image: InputMaybe<file__fileFilterInput>;
  readonly field_image_celebrate: InputMaybe<file__fileFilterInput>;
  readonly node__article: InputMaybe<node__articleFilterListInput>;
  readonly node__potw: InputMaybe<node__potwFilterListInput>;
  readonly node__team: InputMaybe<node__teamFilterListInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__playerSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__playerFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__potw = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__potwPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__potwRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__potw_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__potw_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__potw_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__potwConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__potwEdge>;
  readonly group: ReadonlyArray<node__potwGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__potw>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__potwConnection_distinctArgs = {
  field: node__potwFieldsEnum;
};


type node__potwConnection_groupArgs = {
  field: node__potwFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__potwConnection_maxArgs = {
  field: node__potwFieldsEnum;
};


type node__potwConnection_minArgs = {
  field: node__potwFieldsEnum;
};


type node__potwConnection_sumArgs = {
  field: node__potwFieldsEnum;
};

type node__potwEdge = {
  readonly next: Maybe<node__potw>;
  readonly node: node__potw;
  readonly previous: Maybe<node__potw>;
};

type node__potwFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.langcode'
  | 'promote'
  | 'relationships.field_player.body.format'
  | 'relationships.field_player.body.processed'
  | 'relationships.field_player.body.summary'
  | 'relationships.field_player.body.value'
  | 'relationships.field_player.changed'
  | 'relationships.field_player.children'
  | 'relationships.field_player.children.children'
  | 'relationships.field_player.children.id'
  | 'relationships.field_player.created'
  | 'relationships.field_player.default_langcode'
  | 'relationships.field_player.drupal_id'
  | 'relationships.field_player.drupal_internal__nid'
  | 'relationships.field_player.drupal_internal__vid'
  | 'relationships.field_player.field_birth_date'
  | 'relationships.field_player.field_date_leave'
  | 'relationships.field_player.field_firstname'
  | 'relationships.field_player.field_image.alt'
  | 'relationships.field_player.field_image.height'
  | 'relationships.field_player.field_image.title'
  | 'relationships.field_player.field_image.width'
  | 'relationships.field_player.field_image_celebrate.alt'
  | 'relationships.field_player.field_image_celebrate.height'
  | 'relationships.field_player.field_image_celebrate.title'
  | 'relationships.field_player.field_image_celebrate.width'
  | 'relationships.field_player.field_join_date'
  | 'relationships.field_player.field_lastname'
  | 'relationships.field_player.field_position'
  | 'relationships.field_player.field_shirtnumber'
  | 'relationships.field_player.field_vv_id'
  | 'relationships.field_player.id'
  | 'relationships.field_player.internal.content'
  | 'relationships.field_player.internal.contentDigest'
  | 'relationships.field_player.internal.description'
  | 'relationships.field_player.internal.fieldOwners'
  | 'relationships.field_player.internal.ignoreType'
  | 'relationships.field_player.internal.mediaType'
  | 'relationships.field_player.internal.owner'
  | 'relationships.field_player.internal.type'
  | 'relationships.field_player.langcode'
  | 'relationships.field_player.parent.children'
  | 'relationships.field_player.parent.id'
  | 'relationships.field_player.path.alias'
  | 'relationships.field_player.path.langcode'
  | 'relationships.field_player.path.pid'
  | 'relationships.field_player.promote'
  | 'relationships.field_player.relationships.node__article'
  | 'relationships.field_player.relationships.node__potw'
  | 'relationships.field_player.relationships.node__team'
  | 'relationships.field_player.revision_timestamp'
  | 'relationships.field_player.revision_translation_affected'
  | 'relationships.field_player.status'
  | 'relationships.field_player.sticky'
  | 'relationships.field_player.title'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__potwFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__potwPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__potwRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__potwFilterListInput = {
  readonly elemMatch: InputMaybe<node__potwFilterInput>;
};

type node__potwGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__potwEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__potwGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__potw>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__potwGroupConnection_distinctArgs = {
  field: node__potwFieldsEnum;
};


type node__potwGroupConnection_groupArgs = {
  field: node__potwFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__potwGroupConnection_maxArgs = {
  field: node__potwFieldsEnum;
};


type node__potwGroupConnection_minArgs = {
  field: node__potwFieldsEnum;
};


type node__potwGroupConnection_sumArgs = {
  field: node__potwFieldsEnum;
};

type node__potwPath = {
  readonly langcode: Maybe<Scalars['String']>;
};

type node__potwPathFilterInput = {
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
};

type node__potwRelationships = {
  readonly field_player: Maybe<node__player>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__potwRelationshipsFilterInput = {
  readonly field_player: InputMaybe<node__playerFilterInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__potwSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__potwFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__sponsor = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_type: Maybe<Scalars['String']>;
  readonly field_website: Maybe<node__sponsorField_website>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__sponsorPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__sponsorRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__sponsor_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__sponsor_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__sponsor_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__sponsorConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__sponsorEdge>;
  readonly group: ReadonlyArray<node__sponsorGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__sponsor>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__sponsorConnection_distinctArgs = {
  field: node__sponsorFieldsEnum;
};


type node__sponsorConnection_groupArgs = {
  field: node__sponsorFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__sponsorConnection_maxArgs = {
  field: node__sponsorFieldsEnum;
};


type node__sponsorConnection_minArgs = {
  field: node__sponsorFieldsEnum;
};


type node__sponsorConnection_sumArgs = {
  field: node__sponsorFieldsEnum;
};

type node__sponsorEdge = {
  readonly next: Maybe<node__sponsor>;
  readonly node: node__sponsor;
  readonly previous: Maybe<node__sponsor>;
};

type node__sponsorField_website = {
  readonly title: Maybe<Scalars['String']>;
  readonly uri: Maybe<Scalars['String']>;
};

type node__sponsorField_websiteFilterInput = {
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly uri: InputMaybe<StringQueryOperatorInput>;
};

type node__sponsorFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_type'
  | 'field_website.title'
  | 'field_website.uri'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_media_image.changed'
  | 'relationships.field_media_image.children'
  | 'relationships.field_media_image.children.children'
  | 'relationships.field_media_image.children.id'
  | 'relationships.field_media_image.created'
  | 'relationships.field_media_image.default_langcode'
  | 'relationships.field_media_image.drupal_id'
  | 'relationships.field_media_image.drupal_internal__mid'
  | 'relationships.field_media_image.drupal_internal__vid'
  | 'relationships.field_media_image.field_media_image.alt'
  | 'relationships.field_media_image.field_media_image.height'
  | 'relationships.field_media_image.field_media_image.title'
  | 'relationships.field_media_image.field_media_image.width'
  | 'relationships.field_media_image.id'
  | 'relationships.field_media_image.internal.content'
  | 'relationships.field_media_image.internal.contentDigest'
  | 'relationships.field_media_image.internal.description'
  | 'relationships.field_media_image.internal.fieldOwners'
  | 'relationships.field_media_image.internal.ignoreType'
  | 'relationships.field_media_image.internal.mediaType'
  | 'relationships.field_media_image.internal.owner'
  | 'relationships.field_media_image.internal.type'
  | 'relationships.field_media_image.langcode'
  | 'relationships.field_media_image.name'
  | 'relationships.field_media_image.parent.children'
  | 'relationships.field_media_image.parent.id'
  | 'relationships.field_media_image.path.alias'
  | 'relationships.field_media_image.path.langcode'
  | 'relationships.field_media_image.path.pid'
  | 'relationships.field_media_image.relationships.node__article'
  | 'relationships.field_media_image.relationships.node__event'
  | 'relationships.field_media_image.relationships.node__kcvv_tv'
  | 'relationships.field_media_image.relationships.node__page'
  | 'relationships.field_media_image.relationships.node__sponsor'
  | 'relationships.field_media_image.relationships.node__team'
  | 'relationships.field_media_image.revision_created'
  | 'relationships.field_media_image.revision_translation_affected'
  | 'relationships.field_media_image.status'
  | 'relationships.field_media_image.thumbnail.alt'
  | 'relationships.field_media_image.thumbnail.height'
  | 'relationships.field_media_image.thumbnail.width'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__sponsorFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_type: InputMaybe<StringQueryOperatorInput>;
  readonly field_website: InputMaybe<node__sponsorField_websiteFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__sponsorPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__sponsorRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__sponsorFilterListInput = {
  readonly elemMatch: InputMaybe<node__sponsorFilterInput>;
};

type node__sponsorGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__sponsorEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__sponsorGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__sponsor>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__sponsorGroupConnection_distinctArgs = {
  field: node__sponsorFieldsEnum;
};


type node__sponsorGroupConnection_groupArgs = {
  field: node__sponsorFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__sponsorGroupConnection_maxArgs = {
  field: node__sponsorFieldsEnum;
};


type node__sponsorGroupConnection_minArgs = {
  field: node__sponsorFieldsEnum;
};


type node__sponsorGroupConnection_sumArgs = {
  field: node__sponsorFieldsEnum;
};

type node__sponsorPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__sponsorPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__sponsorRelationships = {
  readonly field_media_image: Maybe<media__image>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__sponsorRelationshipsFilterInput = {
  readonly field_media_image: InputMaybe<media__imageFilterInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__sponsorSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__sponsorFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__staff = Node & {
  readonly body: Maybe<node__staffBody>;
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_birth_date: Maybe<Scalars['Date']>;
  readonly field_firstname: Maybe<Scalars['String']>;
  readonly field_image: Maybe<node__staffField_image>;
  readonly field_join_date: Maybe<Scalars['Date']>;
  readonly field_lastname: Maybe<Scalars['String']>;
  readonly field_position_short: Maybe<Scalars['String']>;
  readonly field_position_staff: Maybe<Scalars['String']>;
  readonly field_vv_id: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__staffPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__staffRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__staff_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__staff_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__staff_field_birth_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__staff_field_join_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__staff_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__staffBody = {
  readonly format: Maybe<Scalars['String']>;
  readonly processed: Maybe<Scalars['String']>;
  readonly summary: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type node__staffBodyFilterInput = {
  readonly format: InputMaybe<StringQueryOperatorInput>;
  readonly processed: InputMaybe<StringQueryOperatorInput>;
  readonly summary: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type node__staffConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__staffEdge>;
  readonly group: ReadonlyArray<node__staffGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__staff>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__staffConnection_distinctArgs = {
  field: node__staffFieldsEnum;
};


type node__staffConnection_groupArgs = {
  field: node__staffFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__staffConnection_maxArgs = {
  field: node__staffFieldsEnum;
};


type node__staffConnection_minArgs = {
  field: node__staffFieldsEnum;
};


type node__staffConnection_sumArgs = {
  field: node__staffFieldsEnum;
};

type node__staffEdge = {
  readonly next: Maybe<node__staff>;
  readonly node: node__staff;
  readonly previous: Maybe<node__staff>;
};

type node__staffField_image = {
  readonly alt: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly title: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type node__staffField_imageFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type node__staffFieldsEnum =
  | 'body.format'
  | 'body.processed'
  | 'body.summary'
  | 'body.value'
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_birth_date'
  | 'field_firstname'
  | 'field_image.alt'
  | 'field_image.height'
  | 'field_image.title'
  | 'field_image.width'
  | 'field_join_date'
  | 'field_lastname'
  | 'field_position_short'
  | 'field_position_staff'
  | 'field_vv_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_image.changed'
  | 'relationships.field_image.children'
  | 'relationships.field_image.children.children'
  | 'relationships.field_image.children.id'
  | 'relationships.field_image.created'
  | 'relationships.field_image.drupal_id'
  | 'relationships.field_image.drupal_internal__fid'
  | 'relationships.field_image.filemime'
  | 'relationships.field_image.filename'
  | 'relationships.field_image.filesize'
  | 'relationships.field_image.id'
  | 'relationships.field_image.internal.content'
  | 'relationships.field_image.internal.contentDigest'
  | 'relationships.field_image.internal.description'
  | 'relationships.field_image.internal.fieldOwners'
  | 'relationships.field_image.internal.ignoreType'
  | 'relationships.field_image.internal.mediaType'
  | 'relationships.field_image.internal.owner'
  | 'relationships.field_image.internal.type'
  | 'relationships.field_image.langcode'
  | 'relationships.field_image.localFile.absolutePath'
  | 'relationships.field_image.localFile.accessTime'
  | 'relationships.field_image.localFile.atime'
  | 'relationships.field_image.localFile.atimeMs'
  | 'relationships.field_image.localFile.base'
  | 'relationships.field_image.localFile.birthTime'
  | 'relationships.field_image.localFile.birthtime'
  | 'relationships.field_image.localFile.birthtimeMs'
  | 'relationships.field_image.localFile.blksize'
  | 'relationships.field_image.localFile.blocks'
  | 'relationships.field_image.localFile.changeTime'
  | 'relationships.field_image.localFile.children'
  | 'relationships.field_image.localFile.childrenImageSharp'
  | 'relationships.field_image.localFile.ctime'
  | 'relationships.field_image.localFile.ctimeMs'
  | 'relationships.field_image.localFile.dev'
  | 'relationships.field_image.localFile.dir'
  | 'relationships.field_image.localFile.ext'
  | 'relationships.field_image.localFile.extension'
  | 'relationships.field_image.localFile.gid'
  | 'relationships.field_image.localFile.id'
  | 'relationships.field_image.localFile.ino'
  | 'relationships.field_image.localFile.mode'
  | 'relationships.field_image.localFile.modifiedTime'
  | 'relationships.field_image.localFile.mtime'
  | 'relationships.field_image.localFile.mtimeMs'
  | 'relationships.field_image.localFile.name'
  | 'relationships.field_image.localFile.nlink'
  | 'relationships.field_image.localFile.prettySize'
  | 'relationships.field_image.localFile.publicURL'
  | 'relationships.field_image.localFile.rdev'
  | 'relationships.field_image.localFile.relativeDirectory'
  | 'relationships.field_image.localFile.relativePath'
  | 'relationships.field_image.localFile.root'
  | 'relationships.field_image.localFile.size'
  | 'relationships.field_image.localFile.sourceInstanceName'
  | 'relationships.field_image.localFile.uid'
  | 'relationships.field_image.localFile.url'
  | 'relationships.field_image.parent.children'
  | 'relationships.field_image.parent.id'
  | 'relationships.field_image.relationships.media__image'
  | 'relationships.field_image.relationships.node__player'
  | 'relationships.field_image.relationships.node__staff'
  | 'relationships.field_image.status'
  | 'relationships.field_image.uri.url'
  | 'relationships.field_image.uri.value'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'relationships.node__team'
  | 'relationships.node__team.changed'
  | 'relationships.node__team.children'
  | 'relationships.node__team.children.children'
  | 'relationships.node__team.children.id'
  | 'relationships.node__team.created'
  | 'relationships.node__team.default_langcode'
  | 'relationships.node__team.drupal_id'
  | 'relationships.node__team.drupal_internal__nid'
  | 'relationships.node__team.drupal_internal__vid'
  | 'relationships.node__team.field_contact_info.format'
  | 'relationships.node__team.field_contact_info.processed'
  | 'relationships.node__team.field_contact_info.value'
  | 'relationships.node__team.field_division_full'
  | 'relationships.node__team.field_fb_id'
  | 'relationships.node__team.field_fb_id_2'
  | 'relationships.node__team.field_staff'
  | 'relationships.node__team.field_tagline'
  | 'relationships.node__team.field_vv_id'
  | 'relationships.node__team.id'
  | 'relationships.node__team.internal.content'
  | 'relationships.node__team.internal.contentDigest'
  | 'relationships.node__team.internal.description'
  | 'relationships.node__team.internal.fieldOwners'
  | 'relationships.node__team.internal.ignoreType'
  | 'relationships.node__team.internal.mediaType'
  | 'relationships.node__team.internal.owner'
  | 'relationships.node__team.internal.type'
  | 'relationships.node__team.langcode'
  | 'relationships.node__team.parent.children'
  | 'relationships.node__team.parent.id'
  | 'relationships.node__team.path.alias'
  | 'relationships.node__team.path.langcode'
  | 'relationships.node__team.path.pid'
  | 'relationships.node__team.promote'
  | 'relationships.node__team.relationships.field_players'
  | 'relationships.node__team.relationships.field_staff'
  | 'relationships.node__team.relationships.node__article'
  | 'relationships.node__team.revision_timestamp'
  | 'relationships.node__team.revision_translation_affected'
  | 'relationships.node__team.status'
  | 'relationships.node__team.sticky'
  | 'relationships.node__team.title'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__staffFilterInput = {
  readonly body: InputMaybe<node__staffBodyFilterInput>;
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_birth_date: InputMaybe<DateQueryOperatorInput>;
  readonly field_firstname: InputMaybe<StringQueryOperatorInput>;
  readonly field_image: InputMaybe<node__staffField_imageFilterInput>;
  readonly field_join_date: InputMaybe<DateQueryOperatorInput>;
  readonly field_lastname: InputMaybe<StringQueryOperatorInput>;
  readonly field_position_short: InputMaybe<StringQueryOperatorInput>;
  readonly field_position_staff: InputMaybe<StringQueryOperatorInput>;
  readonly field_vv_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__staffPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__staffRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__staffFilterListInput = {
  readonly elemMatch: InputMaybe<node__staffFilterInput>;
};

type node__staffGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__staffEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__staffGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__staff>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__staffGroupConnection_distinctArgs = {
  field: node__staffFieldsEnum;
};


type node__staffGroupConnection_groupArgs = {
  field: node__staffFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__staffGroupConnection_maxArgs = {
  field: node__staffFieldsEnum;
};


type node__staffGroupConnection_minArgs = {
  field: node__staffFieldsEnum;
};


type node__staffGroupConnection_sumArgs = {
  field: node__staffFieldsEnum;
};

type node__staffPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__staffPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__staffRelationships = {
  readonly field_image: Maybe<file__file>;
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
  readonly node__team: Maybe<ReadonlyArray<Maybe<node__team>>>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__staffRelationshipsFilterInput = {
  readonly field_image: InputMaybe<file__fileFilterInput>;
  readonly node__article: InputMaybe<node__articleFilterListInput>;
  readonly node__team: InputMaybe<node__teamFilterListInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__staffSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__staffFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type node__team = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly created: Maybe<Scalars['Date']>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__nid: Maybe<Scalars['Int']>;
  readonly drupal_internal__vid: Maybe<Scalars['Int']>;
  readonly field_contact_info: Maybe<node__teamField_contact_info>;
  readonly field_division_full: Maybe<Scalars['String']>;
  readonly field_fb_id: Maybe<Scalars['String']>;
  readonly field_fb_id_2: Maybe<Scalars['String']>;
  readonly field_staff: Maybe<ReadonlyArray<Maybe<node__teamField_staff>>>;
  readonly field_tagline: Maybe<Scalars['String']>;
  readonly field_vv_id: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<node__teamPath>;
  readonly promote: Maybe<Scalars['Boolean']>;
  readonly relationships: Maybe<node__teamRelationships>;
  readonly revision_timestamp: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly sticky: Maybe<Scalars['Boolean']>;
  readonly title: Maybe<Scalars['String']>;
};


type node__team_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__team_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type node__team_revision_timestampArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type node__teamConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__teamEdge>;
  readonly group: ReadonlyArray<node__teamGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__team>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__teamConnection_distinctArgs = {
  field: node__teamFieldsEnum;
};


type node__teamConnection_groupArgs = {
  field: node__teamFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__teamConnection_maxArgs = {
  field: node__teamFieldsEnum;
};


type node__teamConnection_minArgs = {
  field: node__teamFieldsEnum;
};


type node__teamConnection_sumArgs = {
  field: node__teamFieldsEnum;
};

type node__teamEdge = {
  readonly next: Maybe<node__team>;
  readonly node: node__team;
  readonly previous: Maybe<node__team>;
};

type node__teamField_contact_info = {
  readonly format: Maybe<Scalars['String']>;
  readonly processed: Maybe<Scalars['String']>;
  readonly value: Maybe<Scalars['String']>;
};

type node__teamField_contact_infoFilterInput = {
  readonly format: InputMaybe<StringQueryOperatorInput>;
  readonly processed: InputMaybe<StringQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type node__teamField_staff = {
  readonly links: Maybe<node__teamField_staffLinks>;
};

type node__teamField_staffFilterInput = {
  readonly links: InputMaybe<node__teamField_staffLinksFilterInput>;
};

type node__teamField_staffFilterListInput = {
  readonly elemMatch: InputMaybe<node__teamField_staffFilterInput>;
};

type node__teamField_staffLinks = {
  readonly help: Maybe<node__teamField_staffLinksHelp>;
};

type node__teamField_staffLinksFilterInput = {
  readonly help: InputMaybe<node__teamField_staffLinksHelpFilterInput>;
};

type node__teamField_staffLinksHelp = {
  readonly href: Maybe<Scalars['String']>;
  readonly meta: Maybe<node__teamField_staffLinksHelpMeta>;
};

type node__teamField_staffLinksHelpFilterInput = {
  readonly href: InputMaybe<StringQueryOperatorInput>;
  readonly meta: InputMaybe<node__teamField_staffLinksHelpMetaFilterInput>;
};

type node__teamField_staffLinksHelpMeta = {
  readonly about: Maybe<Scalars['String']>;
};

type node__teamField_staffLinksHelpMetaFilterInput = {
  readonly about: InputMaybe<StringQueryOperatorInput>;
};

type node__teamFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'created'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__nid'
  | 'drupal_internal__vid'
  | 'field_contact_info.format'
  | 'field_contact_info.processed'
  | 'field_contact_info.value'
  | 'field_division_full'
  | 'field_fb_id'
  | 'field_fb_id_2'
  | 'field_staff'
  | 'field_staff.links.help.href'
  | 'field_tagline'
  | 'field_vv_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'promote'
  | 'relationships.field_media_article_image.changed'
  | 'relationships.field_media_article_image.children'
  | 'relationships.field_media_article_image.children.children'
  | 'relationships.field_media_article_image.children.id'
  | 'relationships.field_media_article_image.created'
  | 'relationships.field_media_article_image.default_langcode'
  | 'relationships.field_media_article_image.drupal_id'
  | 'relationships.field_media_article_image.drupal_internal__mid'
  | 'relationships.field_media_article_image.drupal_internal__vid'
  | 'relationships.field_media_article_image.field_media_image.alt'
  | 'relationships.field_media_article_image.field_media_image.height'
  | 'relationships.field_media_article_image.field_media_image.title'
  | 'relationships.field_media_article_image.field_media_image.width'
  | 'relationships.field_media_article_image.id'
  | 'relationships.field_media_article_image.internal.content'
  | 'relationships.field_media_article_image.internal.contentDigest'
  | 'relationships.field_media_article_image.internal.description'
  | 'relationships.field_media_article_image.internal.fieldOwners'
  | 'relationships.field_media_article_image.internal.ignoreType'
  | 'relationships.field_media_article_image.internal.mediaType'
  | 'relationships.field_media_article_image.internal.owner'
  | 'relationships.field_media_article_image.internal.type'
  | 'relationships.field_media_article_image.langcode'
  | 'relationships.field_media_article_image.name'
  | 'relationships.field_media_article_image.parent.children'
  | 'relationships.field_media_article_image.parent.id'
  | 'relationships.field_media_article_image.path.alias'
  | 'relationships.field_media_article_image.path.langcode'
  | 'relationships.field_media_article_image.path.pid'
  | 'relationships.field_media_article_image.relationships.node__article'
  | 'relationships.field_media_article_image.relationships.node__event'
  | 'relationships.field_media_article_image.relationships.node__kcvv_tv'
  | 'relationships.field_media_article_image.relationships.node__page'
  | 'relationships.field_media_article_image.relationships.node__sponsor'
  | 'relationships.field_media_article_image.relationships.node__team'
  | 'relationships.field_media_article_image.revision_created'
  | 'relationships.field_media_article_image.revision_translation_affected'
  | 'relationships.field_media_article_image.status'
  | 'relationships.field_media_article_image.thumbnail.alt'
  | 'relationships.field_media_article_image.thumbnail.height'
  | 'relationships.field_media_article_image.thumbnail.width'
  | 'relationships.field_players'
  | 'relationships.field_players.body.format'
  | 'relationships.field_players.body.processed'
  | 'relationships.field_players.body.summary'
  | 'relationships.field_players.body.value'
  | 'relationships.field_players.changed'
  | 'relationships.field_players.children'
  | 'relationships.field_players.children.children'
  | 'relationships.field_players.children.id'
  | 'relationships.field_players.created'
  | 'relationships.field_players.default_langcode'
  | 'relationships.field_players.drupal_id'
  | 'relationships.field_players.drupal_internal__nid'
  | 'relationships.field_players.drupal_internal__vid'
  | 'relationships.field_players.field_birth_date'
  | 'relationships.field_players.field_date_leave'
  | 'relationships.field_players.field_firstname'
  | 'relationships.field_players.field_image.alt'
  | 'relationships.field_players.field_image.height'
  | 'relationships.field_players.field_image.title'
  | 'relationships.field_players.field_image.width'
  | 'relationships.field_players.field_image_celebrate.alt'
  | 'relationships.field_players.field_image_celebrate.height'
  | 'relationships.field_players.field_image_celebrate.title'
  | 'relationships.field_players.field_image_celebrate.width'
  | 'relationships.field_players.field_join_date'
  | 'relationships.field_players.field_lastname'
  | 'relationships.field_players.field_position'
  | 'relationships.field_players.field_shirtnumber'
  | 'relationships.field_players.field_vv_id'
  | 'relationships.field_players.id'
  | 'relationships.field_players.internal.content'
  | 'relationships.field_players.internal.contentDigest'
  | 'relationships.field_players.internal.description'
  | 'relationships.field_players.internal.fieldOwners'
  | 'relationships.field_players.internal.ignoreType'
  | 'relationships.field_players.internal.mediaType'
  | 'relationships.field_players.internal.owner'
  | 'relationships.field_players.internal.type'
  | 'relationships.field_players.langcode'
  | 'relationships.field_players.parent.children'
  | 'relationships.field_players.parent.id'
  | 'relationships.field_players.path.alias'
  | 'relationships.field_players.path.langcode'
  | 'relationships.field_players.path.pid'
  | 'relationships.field_players.promote'
  | 'relationships.field_players.relationships.node__article'
  | 'relationships.field_players.relationships.node__potw'
  | 'relationships.field_players.relationships.node__team'
  | 'relationships.field_players.revision_timestamp'
  | 'relationships.field_players.revision_translation_affected'
  | 'relationships.field_players.status'
  | 'relationships.field_players.sticky'
  | 'relationships.field_players.title'
  | 'relationships.field_staff'
  | 'relationships.field_staff.body.format'
  | 'relationships.field_staff.body.processed'
  | 'relationships.field_staff.body.summary'
  | 'relationships.field_staff.body.value'
  | 'relationships.field_staff.changed'
  | 'relationships.field_staff.children'
  | 'relationships.field_staff.children.children'
  | 'relationships.field_staff.children.id'
  | 'relationships.field_staff.created'
  | 'relationships.field_staff.default_langcode'
  | 'relationships.field_staff.drupal_id'
  | 'relationships.field_staff.drupal_internal__nid'
  | 'relationships.field_staff.drupal_internal__vid'
  | 'relationships.field_staff.field_birth_date'
  | 'relationships.field_staff.field_firstname'
  | 'relationships.field_staff.field_image.alt'
  | 'relationships.field_staff.field_image.height'
  | 'relationships.field_staff.field_image.title'
  | 'relationships.field_staff.field_image.width'
  | 'relationships.field_staff.field_join_date'
  | 'relationships.field_staff.field_lastname'
  | 'relationships.field_staff.field_position_short'
  | 'relationships.field_staff.field_position_staff'
  | 'relationships.field_staff.field_vv_id'
  | 'relationships.field_staff.id'
  | 'relationships.field_staff.internal.content'
  | 'relationships.field_staff.internal.contentDigest'
  | 'relationships.field_staff.internal.description'
  | 'relationships.field_staff.internal.fieldOwners'
  | 'relationships.field_staff.internal.ignoreType'
  | 'relationships.field_staff.internal.mediaType'
  | 'relationships.field_staff.internal.owner'
  | 'relationships.field_staff.internal.type'
  | 'relationships.field_staff.langcode'
  | 'relationships.field_staff.parent.children'
  | 'relationships.field_staff.parent.id'
  | 'relationships.field_staff.path.alias'
  | 'relationships.field_staff.path.langcode'
  | 'relationships.field_staff.path.pid'
  | 'relationships.field_staff.promote'
  | 'relationships.field_staff.relationships.node__article'
  | 'relationships.field_staff.relationships.node__team'
  | 'relationships.field_staff.revision_timestamp'
  | 'relationships.field_staff.revision_translation_affected'
  | 'relationships.field_staff.status'
  | 'relationships.field_staff.sticky'
  | 'relationships.field_staff.title'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'relationships.revision_uid.children'
  | 'relationships.revision_uid.children.children'
  | 'relationships.revision_uid.children.id'
  | 'relationships.revision_uid.display_name'
  | 'relationships.revision_uid.drupal_id'
  | 'relationships.revision_uid.id'
  | 'relationships.revision_uid.internal.content'
  | 'relationships.revision_uid.internal.contentDigest'
  | 'relationships.revision_uid.internal.description'
  | 'relationships.revision_uid.internal.fieldOwners'
  | 'relationships.revision_uid.internal.ignoreType'
  | 'relationships.revision_uid.internal.mediaType'
  | 'relationships.revision_uid.internal.owner'
  | 'relationships.revision_uid.internal.type'
  | 'relationships.revision_uid.parent.children'
  | 'relationships.revision_uid.parent.id'
  | 'relationships.revision_uid.relationships.file__file'
  | 'relationships.revision_uid.relationships.media__image'
  | 'relationships.revision_uid.relationships.node__article'
  | 'relationships.revision_uid.relationships.node__event'
  | 'relationships.revision_uid.relationships.node__kcvv_tv'
  | 'relationships.revision_uid.relationships.node__page'
  | 'relationships.revision_uid.relationships.node__player'
  | 'relationships.revision_uid.relationships.node__potw'
  | 'relationships.revision_uid.relationships.node__sponsor'
  | 'relationships.revision_uid.relationships.node__staff'
  | 'relationships.revision_uid.relationships.node__team'
  | 'relationships.uid.children'
  | 'relationships.uid.children.children'
  | 'relationships.uid.children.id'
  | 'relationships.uid.display_name'
  | 'relationships.uid.drupal_id'
  | 'relationships.uid.id'
  | 'relationships.uid.internal.content'
  | 'relationships.uid.internal.contentDigest'
  | 'relationships.uid.internal.description'
  | 'relationships.uid.internal.fieldOwners'
  | 'relationships.uid.internal.ignoreType'
  | 'relationships.uid.internal.mediaType'
  | 'relationships.uid.internal.owner'
  | 'relationships.uid.internal.type'
  | 'relationships.uid.parent.children'
  | 'relationships.uid.parent.id'
  | 'relationships.uid.relationships.file__file'
  | 'relationships.uid.relationships.media__image'
  | 'relationships.uid.relationships.node__article'
  | 'relationships.uid.relationships.node__event'
  | 'relationships.uid.relationships.node__kcvv_tv'
  | 'relationships.uid.relationships.node__page'
  | 'relationships.uid.relationships.node__player'
  | 'relationships.uid.relationships.node__potw'
  | 'relationships.uid.relationships.node__sponsor'
  | 'relationships.uid.relationships.node__staff'
  | 'relationships.uid.relationships.node__team'
  | 'revision_timestamp'
  | 'revision_translation_affected'
  | 'status'
  | 'sticky'
  | 'title';

type node__teamFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly created: InputMaybe<DateQueryOperatorInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__nid: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__vid: InputMaybe<IntQueryOperatorInput>;
  readonly field_contact_info: InputMaybe<node__teamField_contact_infoFilterInput>;
  readonly field_division_full: InputMaybe<StringQueryOperatorInput>;
  readonly field_fb_id: InputMaybe<StringQueryOperatorInput>;
  readonly field_fb_id_2: InputMaybe<StringQueryOperatorInput>;
  readonly field_staff: InputMaybe<node__teamField_staffFilterListInput>;
  readonly field_tagline: InputMaybe<StringQueryOperatorInput>;
  readonly field_vv_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<node__teamPathFilterInput>;
  readonly promote: InputMaybe<BooleanQueryOperatorInput>;
  readonly relationships: InputMaybe<node__teamRelationshipsFilterInput>;
  readonly revision_timestamp: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly sticky: InputMaybe<BooleanQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type node__teamFilterListInput = {
  readonly elemMatch: InputMaybe<node__teamFilterInput>;
};

type node__teamGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<node__teamEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<node__teamGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<node__team>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type node__teamGroupConnection_distinctArgs = {
  field: node__teamFieldsEnum;
};


type node__teamGroupConnection_groupArgs = {
  field: node__teamFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type node__teamGroupConnection_maxArgs = {
  field: node__teamFieldsEnum;
};


type node__teamGroupConnection_minArgs = {
  field: node__teamFieldsEnum;
};


type node__teamGroupConnection_sumArgs = {
  field: node__teamFieldsEnum;
};

type node__teamPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type node__teamPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type node__teamRelationships = {
  readonly field_media_article_image: Maybe<media__image>;
  readonly field_players: Maybe<ReadonlyArray<Maybe<node__player>>>;
  readonly field_staff: Maybe<ReadonlyArray<Maybe<node__staff>>>;
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
  readonly revision_uid: Maybe<user__user>;
  readonly uid: Maybe<user__user>;
};

type node__teamRelationshipsFilterInput = {
  readonly field_media_article_image: InputMaybe<media__imageFilterInput>;
  readonly field_players: InputMaybe<node__playerFilterListInput>;
  readonly field_staff: InputMaybe<node__staffFilterListInput>;
  readonly node__article: InputMaybe<node__articleFilterListInput>;
  readonly revision_uid: InputMaybe<user__userFilterInput>;
  readonly uid: InputMaybe<user__userFilterInput>;
};

type node__teamSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<node__teamFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type taxonomy_term__category = Node & {
  readonly changed: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly default_langcode: Maybe<Scalars['Boolean']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly drupal_internal__revision_id: Maybe<Scalars['Int']>;
  readonly drupal_internal__tid: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly langcode: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly path: Maybe<taxonomy_term__categoryPath>;
  readonly relationships: Maybe<taxonomy_term__categoryRelationships>;
  readonly revision_created: Maybe<Scalars['Date']>;
  readonly revision_translation_affected: Maybe<Scalars['Boolean']>;
  readonly status: Maybe<Scalars['Boolean']>;
  readonly weight: Maybe<Scalars['Int']>;
};


type taxonomy_term__category_changedArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type taxonomy_term__category_revision_createdArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type taxonomy_term__categoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<taxonomy_term__categoryEdge>;
  readonly group: ReadonlyArray<taxonomy_term__categoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<taxonomy_term__category>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type taxonomy_term__categoryConnection_distinctArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};


type taxonomy_term__categoryConnection_groupArgs = {
  field: taxonomy_term__categoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type taxonomy_term__categoryConnection_maxArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};


type taxonomy_term__categoryConnection_minArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};


type taxonomy_term__categoryConnection_sumArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};

type taxonomy_term__categoryEdge = {
  readonly next: Maybe<taxonomy_term__category>;
  readonly node: taxonomy_term__category;
  readonly previous: Maybe<taxonomy_term__category>;
};

type taxonomy_term__categoryFieldsEnum =
  | 'changed'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'default_langcode'
  | 'drupal_id'
  | 'drupal_internal__revision_id'
  | 'drupal_internal__tid'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'langcode'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path.alias'
  | 'path.langcode'
  | 'path.pid'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'revision_created'
  | 'revision_translation_affected'
  | 'status'
  | 'weight';

type taxonomy_term__categoryFilterInput = {
  readonly changed: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly default_langcode: InputMaybe<BooleanQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_internal__revision_id: InputMaybe<IntQueryOperatorInput>;
  readonly drupal_internal__tid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<taxonomy_term__categoryPathFilterInput>;
  readonly relationships: InputMaybe<taxonomy_term__categoryRelationshipsFilterInput>;
  readonly revision_created: InputMaybe<DateQueryOperatorInput>;
  readonly revision_translation_affected: InputMaybe<BooleanQueryOperatorInput>;
  readonly status: InputMaybe<BooleanQueryOperatorInput>;
  readonly weight: InputMaybe<IntQueryOperatorInput>;
};

type taxonomy_term__categoryFilterListInput = {
  readonly elemMatch: InputMaybe<taxonomy_term__categoryFilterInput>;
};

type taxonomy_term__categoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<taxonomy_term__categoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<taxonomy_term__categoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<taxonomy_term__category>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type taxonomy_term__categoryGroupConnection_distinctArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};


type taxonomy_term__categoryGroupConnection_groupArgs = {
  field: taxonomy_term__categoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type taxonomy_term__categoryGroupConnection_maxArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};


type taxonomy_term__categoryGroupConnection_minArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};


type taxonomy_term__categoryGroupConnection_sumArgs = {
  field: taxonomy_term__categoryFieldsEnum;
};

type taxonomy_term__categoryPath = {
  readonly alias: Maybe<Scalars['String']>;
  readonly langcode: Maybe<Scalars['String']>;
  readonly pid: Maybe<Scalars['Int']>;
};

type taxonomy_term__categoryPathFilterInput = {
  readonly alias: InputMaybe<StringQueryOperatorInput>;
  readonly langcode: InputMaybe<StringQueryOperatorInput>;
  readonly pid: InputMaybe<IntQueryOperatorInput>;
};

type taxonomy_term__categoryRelationships = {
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
};

type taxonomy_term__categoryRelationshipsFilterInput = {
  readonly node__article: InputMaybe<node__articleFilterListInput>;
};

type taxonomy_term__categorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<taxonomy_term__categoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type user__user = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly display_name: Maybe<Scalars['String']>;
  readonly drupal_id: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly relationships: Maybe<user__userRelationships>;
};

type user__userConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<user__userEdge>;
  readonly group: ReadonlyArray<user__userGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<user__user>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type user__userConnection_distinctArgs = {
  field: user__userFieldsEnum;
};


type user__userConnection_groupArgs = {
  field: user__userFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type user__userConnection_maxArgs = {
  field: user__userFieldsEnum;
};


type user__userConnection_minArgs = {
  field: user__userFieldsEnum;
};


type user__userConnection_sumArgs = {
  field: user__userFieldsEnum;
};

type user__userEdge = {
  readonly next: Maybe<user__user>;
  readonly node: user__user;
  readonly previous: Maybe<user__user>;
};

type user__userFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'display_name'
  | 'drupal_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'relationships.file__file'
  | 'relationships.file__file.changed'
  | 'relationships.file__file.children'
  | 'relationships.file__file.children.children'
  | 'relationships.file__file.children.id'
  | 'relationships.file__file.created'
  | 'relationships.file__file.drupal_id'
  | 'relationships.file__file.drupal_internal__fid'
  | 'relationships.file__file.filemime'
  | 'relationships.file__file.filename'
  | 'relationships.file__file.filesize'
  | 'relationships.file__file.id'
  | 'relationships.file__file.internal.content'
  | 'relationships.file__file.internal.contentDigest'
  | 'relationships.file__file.internal.description'
  | 'relationships.file__file.internal.fieldOwners'
  | 'relationships.file__file.internal.ignoreType'
  | 'relationships.file__file.internal.mediaType'
  | 'relationships.file__file.internal.owner'
  | 'relationships.file__file.internal.type'
  | 'relationships.file__file.langcode'
  | 'relationships.file__file.localFile.absolutePath'
  | 'relationships.file__file.localFile.accessTime'
  | 'relationships.file__file.localFile.atime'
  | 'relationships.file__file.localFile.atimeMs'
  | 'relationships.file__file.localFile.base'
  | 'relationships.file__file.localFile.birthTime'
  | 'relationships.file__file.localFile.birthtime'
  | 'relationships.file__file.localFile.birthtimeMs'
  | 'relationships.file__file.localFile.blksize'
  | 'relationships.file__file.localFile.blocks'
  | 'relationships.file__file.localFile.changeTime'
  | 'relationships.file__file.localFile.children'
  | 'relationships.file__file.localFile.childrenImageSharp'
  | 'relationships.file__file.localFile.ctime'
  | 'relationships.file__file.localFile.ctimeMs'
  | 'relationships.file__file.localFile.dev'
  | 'relationships.file__file.localFile.dir'
  | 'relationships.file__file.localFile.ext'
  | 'relationships.file__file.localFile.extension'
  | 'relationships.file__file.localFile.gid'
  | 'relationships.file__file.localFile.id'
  | 'relationships.file__file.localFile.ino'
  | 'relationships.file__file.localFile.mode'
  | 'relationships.file__file.localFile.modifiedTime'
  | 'relationships.file__file.localFile.mtime'
  | 'relationships.file__file.localFile.mtimeMs'
  | 'relationships.file__file.localFile.name'
  | 'relationships.file__file.localFile.nlink'
  | 'relationships.file__file.localFile.prettySize'
  | 'relationships.file__file.localFile.publicURL'
  | 'relationships.file__file.localFile.rdev'
  | 'relationships.file__file.localFile.relativeDirectory'
  | 'relationships.file__file.localFile.relativePath'
  | 'relationships.file__file.localFile.root'
  | 'relationships.file__file.localFile.size'
  | 'relationships.file__file.localFile.sourceInstanceName'
  | 'relationships.file__file.localFile.uid'
  | 'relationships.file__file.localFile.url'
  | 'relationships.file__file.parent.children'
  | 'relationships.file__file.parent.id'
  | 'relationships.file__file.relationships.media__image'
  | 'relationships.file__file.relationships.node__player'
  | 'relationships.file__file.relationships.node__staff'
  | 'relationships.file__file.status'
  | 'relationships.file__file.uri.url'
  | 'relationships.file__file.uri.value'
  | 'relationships.media__image'
  | 'relationships.media__image.changed'
  | 'relationships.media__image.children'
  | 'relationships.media__image.children.children'
  | 'relationships.media__image.children.id'
  | 'relationships.media__image.created'
  | 'relationships.media__image.default_langcode'
  | 'relationships.media__image.drupal_id'
  | 'relationships.media__image.drupal_internal__mid'
  | 'relationships.media__image.drupal_internal__vid'
  | 'relationships.media__image.field_media_image.alt'
  | 'relationships.media__image.field_media_image.height'
  | 'relationships.media__image.field_media_image.title'
  | 'relationships.media__image.field_media_image.width'
  | 'relationships.media__image.id'
  | 'relationships.media__image.internal.content'
  | 'relationships.media__image.internal.contentDigest'
  | 'relationships.media__image.internal.description'
  | 'relationships.media__image.internal.fieldOwners'
  | 'relationships.media__image.internal.ignoreType'
  | 'relationships.media__image.internal.mediaType'
  | 'relationships.media__image.internal.owner'
  | 'relationships.media__image.internal.type'
  | 'relationships.media__image.langcode'
  | 'relationships.media__image.name'
  | 'relationships.media__image.parent.children'
  | 'relationships.media__image.parent.id'
  | 'relationships.media__image.path.alias'
  | 'relationships.media__image.path.langcode'
  | 'relationships.media__image.path.pid'
  | 'relationships.media__image.relationships.node__article'
  | 'relationships.media__image.relationships.node__event'
  | 'relationships.media__image.relationships.node__kcvv_tv'
  | 'relationships.media__image.relationships.node__page'
  | 'relationships.media__image.relationships.node__sponsor'
  | 'relationships.media__image.relationships.node__team'
  | 'relationships.media__image.revision_created'
  | 'relationships.media__image.revision_translation_affected'
  | 'relationships.media__image.status'
  | 'relationships.media__image.thumbnail.alt'
  | 'relationships.media__image.thumbnail.height'
  | 'relationships.media__image.thumbnail.width'
  | 'relationships.node__article'
  | 'relationships.node__article.body.format'
  | 'relationships.node__article.body.processed'
  | 'relationships.node__article.body.summary'
  | 'relationships.node__article.body.value'
  | 'relationships.node__article.changed'
  | 'relationships.node__article.children'
  | 'relationships.node__article.children.children'
  | 'relationships.node__article.children.id'
  | 'relationships.node__article.created'
  | 'relationships.node__article.default_langcode'
  | 'relationships.node__article.drupal_id'
  | 'relationships.node__article.drupal_internal__nid'
  | 'relationships.node__article.drupal_internal__vid'
  | 'relationships.node__article.field_featured'
  | 'relationships.node__article.field_related_content'
  | 'relationships.node__article.id'
  | 'relationships.node__article.internal.content'
  | 'relationships.node__article.internal.contentDigest'
  | 'relationships.node__article.internal.description'
  | 'relationships.node__article.internal.fieldOwners'
  | 'relationships.node__article.internal.ignoreType'
  | 'relationships.node__article.internal.mediaType'
  | 'relationships.node__article.internal.owner'
  | 'relationships.node__article.internal.type'
  | 'relationships.node__article.langcode'
  | 'relationships.node__article.parent.children'
  | 'relationships.node__article.parent.id'
  | 'relationships.node__article.path.alias'
  | 'relationships.node__article.path.langcode'
  | 'relationships.node__article.path.pid'
  | 'relationships.node__article.promote'
  | 'relationships.node__article.relationships.field_tags'
  | 'relationships.node__article.relationships.node__article'
  | 'relationships.node__article.revision_timestamp'
  | 'relationships.node__article.revision_translation_affected'
  | 'relationships.node__article.status'
  | 'relationships.node__article.sticky'
  | 'relationships.node__article.title'
  | 'relationships.node__event'
  | 'relationships.node__event.changed'
  | 'relationships.node__event.children'
  | 'relationships.node__event.children.children'
  | 'relationships.node__event.children.id'
  | 'relationships.node__event.created'
  | 'relationships.node__event.default_langcode'
  | 'relationships.node__event.drupal_id'
  | 'relationships.node__event.drupal_internal__nid'
  | 'relationships.node__event.drupal_internal__vid'
  | 'relationships.node__event.field_daterange.end_value'
  | 'relationships.node__event.field_daterange.value'
  | 'relationships.node__event.field_event_link.title'
  | 'relationships.node__event.field_event_link.uri'
  | 'relationships.node__event.id'
  | 'relationships.node__event.internal.content'
  | 'relationships.node__event.internal.contentDigest'
  | 'relationships.node__event.internal.description'
  | 'relationships.node__event.internal.fieldOwners'
  | 'relationships.node__event.internal.ignoreType'
  | 'relationships.node__event.internal.mediaType'
  | 'relationships.node__event.internal.owner'
  | 'relationships.node__event.internal.type'
  | 'relationships.node__event.langcode'
  | 'relationships.node__event.parent.children'
  | 'relationships.node__event.parent.id'
  | 'relationships.node__event.path.alias'
  | 'relationships.node__event.path.langcode'
  | 'relationships.node__event.path.pid'
  | 'relationships.node__event.promote'
  | 'relationships.node__event.revision_timestamp'
  | 'relationships.node__event.revision_translation_affected'
  | 'relationships.node__event.status'
  | 'relationships.node__event.sticky'
  | 'relationships.node__event.title'
  | 'relationships.node__event.unpublish_on'
  | 'relationships.node__kcvv_tv'
  | 'relationships.node__kcvv_tv.changed'
  | 'relationships.node__kcvv_tv.children'
  | 'relationships.node__kcvv_tv.children.children'
  | 'relationships.node__kcvv_tv.children.id'
  | 'relationships.node__kcvv_tv.created'
  | 'relationships.node__kcvv_tv.default_langcode'
  | 'relationships.node__kcvv_tv.drupal_id'
  | 'relationships.node__kcvv_tv.drupal_internal__nid'
  | 'relationships.node__kcvv_tv.drupal_internal__vid'
  | 'relationships.node__kcvv_tv.field_website.title'
  | 'relationships.node__kcvv_tv.field_website.uri'
  | 'relationships.node__kcvv_tv.id'
  | 'relationships.node__kcvv_tv.internal.content'
  | 'relationships.node__kcvv_tv.internal.contentDigest'
  | 'relationships.node__kcvv_tv.internal.description'
  | 'relationships.node__kcvv_tv.internal.fieldOwners'
  | 'relationships.node__kcvv_tv.internal.ignoreType'
  | 'relationships.node__kcvv_tv.internal.mediaType'
  | 'relationships.node__kcvv_tv.internal.owner'
  | 'relationships.node__kcvv_tv.internal.type'
  | 'relationships.node__kcvv_tv.langcode'
  | 'relationships.node__kcvv_tv.parent.children'
  | 'relationships.node__kcvv_tv.parent.id'
  | 'relationships.node__kcvv_tv.path.alias'
  | 'relationships.node__kcvv_tv.path.langcode'
  | 'relationships.node__kcvv_tv.path.pid'
  | 'relationships.node__kcvv_tv.promote'
  | 'relationships.node__kcvv_tv.revision_timestamp'
  | 'relationships.node__kcvv_tv.revision_translation_affected'
  | 'relationships.node__kcvv_tv.status'
  | 'relationships.node__kcvv_tv.sticky'
  | 'relationships.node__kcvv_tv.title'
  | 'relationships.node__page'
  | 'relationships.node__page.body.format'
  | 'relationships.node__page.body.processed'
  | 'relationships.node__page.body.summary'
  | 'relationships.node__page.body.value'
  | 'relationships.node__page.changed'
  | 'relationships.node__page.children'
  | 'relationships.node__page.children.children'
  | 'relationships.node__page.children.id'
  | 'relationships.node__page.created'
  | 'relationships.node__page.default_langcode'
  | 'relationships.node__page.drupal_id'
  | 'relationships.node__page.drupal_internal__nid'
  | 'relationships.node__page.drupal_internal__vid'
  | 'relationships.node__page.id'
  | 'relationships.node__page.internal.content'
  | 'relationships.node__page.internal.contentDigest'
  | 'relationships.node__page.internal.description'
  | 'relationships.node__page.internal.fieldOwners'
  | 'relationships.node__page.internal.ignoreType'
  | 'relationships.node__page.internal.mediaType'
  | 'relationships.node__page.internal.owner'
  | 'relationships.node__page.internal.type'
  | 'relationships.node__page.langcode'
  | 'relationships.node__page.parent.children'
  | 'relationships.node__page.parent.id'
  | 'relationships.node__page.path.alias'
  | 'relationships.node__page.path.langcode'
  | 'relationships.node__page.path.pid'
  | 'relationships.node__page.promote'
  | 'relationships.node__page.revision_timestamp'
  | 'relationships.node__page.revision_translation_affected'
  | 'relationships.node__page.status'
  | 'relationships.node__page.sticky'
  | 'relationships.node__page.title'
  | 'relationships.node__player'
  | 'relationships.node__player.body.format'
  | 'relationships.node__player.body.processed'
  | 'relationships.node__player.body.summary'
  | 'relationships.node__player.body.value'
  | 'relationships.node__player.changed'
  | 'relationships.node__player.children'
  | 'relationships.node__player.children.children'
  | 'relationships.node__player.children.id'
  | 'relationships.node__player.created'
  | 'relationships.node__player.default_langcode'
  | 'relationships.node__player.drupal_id'
  | 'relationships.node__player.drupal_internal__nid'
  | 'relationships.node__player.drupal_internal__vid'
  | 'relationships.node__player.field_birth_date'
  | 'relationships.node__player.field_date_leave'
  | 'relationships.node__player.field_firstname'
  | 'relationships.node__player.field_image.alt'
  | 'relationships.node__player.field_image.height'
  | 'relationships.node__player.field_image.title'
  | 'relationships.node__player.field_image.width'
  | 'relationships.node__player.field_image_celebrate.alt'
  | 'relationships.node__player.field_image_celebrate.height'
  | 'relationships.node__player.field_image_celebrate.title'
  | 'relationships.node__player.field_image_celebrate.width'
  | 'relationships.node__player.field_join_date'
  | 'relationships.node__player.field_lastname'
  | 'relationships.node__player.field_position'
  | 'relationships.node__player.field_shirtnumber'
  | 'relationships.node__player.field_vv_id'
  | 'relationships.node__player.id'
  | 'relationships.node__player.internal.content'
  | 'relationships.node__player.internal.contentDigest'
  | 'relationships.node__player.internal.description'
  | 'relationships.node__player.internal.fieldOwners'
  | 'relationships.node__player.internal.ignoreType'
  | 'relationships.node__player.internal.mediaType'
  | 'relationships.node__player.internal.owner'
  | 'relationships.node__player.internal.type'
  | 'relationships.node__player.langcode'
  | 'relationships.node__player.parent.children'
  | 'relationships.node__player.parent.id'
  | 'relationships.node__player.path.alias'
  | 'relationships.node__player.path.langcode'
  | 'relationships.node__player.path.pid'
  | 'relationships.node__player.promote'
  | 'relationships.node__player.relationships.node__article'
  | 'relationships.node__player.relationships.node__potw'
  | 'relationships.node__player.relationships.node__team'
  | 'relationships.node__player.revision_timestamp'
  | 'relationships.node__player.revision_translation_affected'
  | 'relationships.node__player.status'
  | 'relationships.node__player.sticky'
  | 'relationships.node__player.title'
  | 'relationships.node__potw'
  | 'relationships.node__potw.changed'
  | 'relationships.node__potw.children'
  | 'relationships.node__potw.children.children'
  | 'relationships.node__potw.children.id'
  | 'relationships.node__potw.created'
  | 'relationships.node__potw.default_langcode'
  | 'relationships.node__potw.drupal_id'
  | 'relationships.node__potw.drupal_internal__nid'
  | 'relationships.node__potw.drupal_internal__vid'
  | 'relationships.node__potw.id'
  | 'relationships.node__potw.internal.content'
  | 'relationships.node__potw.internal.contentDigest'
  | 'relationships.node__potw.internal.description'
  | 'relationships.node__potw.internal.fieldOwners'
  | 'relationships.node__potw.internal.ignoreType'
  | 'relationships.node__potw.internal.mediaType'
  | 'relationships.node__potw.internal.owner'
  | 'relationships.node__potw.internal.type'
  | 'relationships.node__potw.langcode'
  | 'relationships.node__potw.parent.children'
  | 'relationships.node__potw.parent.id'
  | 'relationships.node__potw.path.langcode'
  | 'relationships.node__potw.promote'
  | 'relationships.node__potw.revision_timestamp'
  | 'relationships.node__potw.revision_translation_affected'
  | 'relationships.node__potw.status'
  | 'relationships.node__potw.sticky'
  | 'relationships.node__potw.title'
  | 'relationships.node__sponsor'
  | 'relationships.node__sponsor.changed'
  | 'relationships.node__sponsor.children'
  | 'relationships.node__sponsor.children.children'
  | 'relationships.node__sponsor.children.id'
  | 'relationships.node__sponsor.created'
  | 'relationships.node__sponsor.default_langcode'
  | 'relationships.node__sponsor.drupal_id'
  | 'relationships.node__sponsor.drupal_internal__nid'
  | 'relationships.node__sponsor.drupal_internal__vid'
  | 'relationships.node__sponsor.field_type'
  | 'relationships.node__sponsor.field_website.title'
  | 'relationships.node__sponsor.field_website.uri'
  | 'relationships.node__sponsor.id'
  | 'relationships.node__sponsor.internal.content'
  | 'relationships.node__sponsor.internal.contentDigest'
  | 'relationships.node__sponsor.internal.description'
  | 'relationships.node__sponsor.internal.fieldOwners'
  | 'relationships.node__sponsor.internal.ignoreType'
  | 'relationships.node__sponsor.internal.mediaType'
  | 'relationships.node__sponsor.internal.owner'
  | 'relationships.node__sponsor.internal.type'
  | 'relationships.node__sponsor.langcode'
  | 'relationships.node__sponsor.parent.children'
  | 'relationships.node__sponsor.parent.id'
  | 'relationships.node__sponsor.path.alias'
  | 'relationships.node__sponsor.path.langcode'
  | 'relationships.node__sponsor.path.pid'
  | 'relationships.node__sponsor.promote'
  | 'relationships.node__sponsor.revision_timestamp'
  | 'relationships.node__sponsor.revision_translation_affected'
  | 'relationships.node__sponsor.status'
  | 'relationships.node__sponsor.sticky'
  | 'relationships.node__sponsor.title'
  | 'relationships.node__staff'
  | 'relationships.node__staff.body.format'
  | 'relationships.node__staff.body.processed'
  | 'relationships.node__staff.body.summary'
  | 'relationships.node__staff.body.value'
  | 'relationships.node__staff.changed'
  | 'relationships.node__staff.children'
  | 'relationships.node__staff.children.children'
  | 'relationships.node__staff.children.id'
  | 'relationships.node__staff.created'
  | 'relationships.node__staff.default_langcode'
  | 'relationships.node__staff.drupal_id'
  | 'relationships.node__staff.drupal_internal__nid'
  | 'relationships.node__staff.drupal_internal__vid'
  | 'relationships.node__staff.field_birth_date'
  | 'relationships.node__staff.field_firstname'
  | 'relationships.node__staff.field_image.alt'
  | 'relationships.node__staff.field_image.height'
  | 'relationships.node__staff.field_image.title'
  | 'relationships.node__staff.field_image.width'
  | 'relationships.node__staff.field_join_date'
  | 'relationships.node__staff.field_lastname'
  | 'relationships.node__staff.field_position_short'
  | 'relationships.node__staff.field_position_staff'
  | 'relationships.node__staff.field_vv_id'
  | 'relationships.node__staff.id'
  | 'relationships.node__staff.internal.content'
  | 'relationships.node__staff.internal.contentDigest'
  | 'relationships.node__staff.internal.description'
  | 'relationships.node__staff.internal.fieldOwners'
  | 'relationships.node__staff.internal.ignoreType'
  | 'relationships.node__staff.internal.mediaType'
  | 'relationships.node__staff.internal.owner'
  | 'relationships.node__staff.internal.type'
  | 'relationships.node__staff.langcode'
  | 'relationships.node__staff.parent.children'
  | 'relationships.node__staff.parent.id'
  | 'relationships.node__staff.path.alias'
  | 'relationships.node__staff.path.langcode'
  | 'relationships.node__staff.path.pid'
  | 'relationships.node__staff.promote'
  | 'relationships.node__staff.relationships.node__article'
  | 'relationships.node__staff.relationships.node__team'
  | 'relationships.node__staff.revision_timestamp'
  | 'relationships.node__staff.revision_translation_affected'
  | 'relationships.node__staff.status'
  | 'relationships.node__staff.sticky'
  | 'relationships.node__staff.title'
  | 'relationships.node__team'
  | 'relationships.node__team.changed'
  | 'relationships.node__team.children'
  | 'relationships.node__team.children.children'
  | 'relationships.node__team.children.id'
  | 'relationships.node__team.created'
  | 'relationships.node__team.default_langcode'
  | 'relationships.node__team.drupal_id'
  | 'relationships.node__team.drupal_internal__nid'
  | 'relationships.node__team.drupal_internal__vid'
  | 'relationships.node__team.field_contact_info.format'
  | 'relationships.node__team.field_contact_info.processed'
  | 'relationships.node__team.field_contact_info.value'
  | 'relationships.node__team.field_division_full'
  | 'relationships.node__team.field_fb_id'
  | 'relationships.node__team.field_fb_id_2'
  | 'relationships.node__team.field_staff'
  | 'relationships.node__team.field_tagline'
  | 'relationships.node__team.field_vv_id'
  | 'relationships.node__team.id'
  | 'relationships.node__team.internal.content'
  | 'relationships.node__team.internal.contentDigest'
  | 'relationships.node__team.internal.description'
  | 'relationships.node__team.internal.fieldOwners'
  | 'relationships.node__team.internal.ignoreType'
  | 'relationships.node__team.internal.mediaType'
  | 'relationships.node__team.internal.owner'
  | 'relationships.node__team.internal.type'
  | 'relationships.node__team.langcode'
  | 'relationships.node__team.parent.children'
  | 'relationships.node__team.parent.id'
  | 'relationships.node__team.path.alias'
  | 'relationships.node__team.path.langcode'
  | 'relationships.node__team.path.pid'
  | 'relationships.node__team.promote'
  | 'relationships.node__team.relationships.field_players'
  | 'relationships.node__team.relationships.field_staff'
  | 'relationships.node__team.relationships.node__article'
  | 'relationships.node__team.revision_timestamp'
  | 'relationships.node__team.revision_translation_affected'
  | 'relationships.node__team.status'
  | 'relationships.node__team.sticky'
  | 'relationships.node__team.title';

type user__userFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly display_name: InputMaybe<StringQueryOperatorInput>;
  readonly drupal_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly relationships: InputMaybe<user__userRelationshipsFilterInput>;
};

type user__userGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<user__userEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<user__userGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<user__user>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type user__userGroupConnection_distinctArgs = {
  field: user__userFieldsEnum;
};


type user__userGroupConnection_groupArgs = {
  field: user__userFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type user__userGroupConnection_maxArgs = {
  field: user__userFieldsEnum;
};


type user__userGroupConnection_minArgs = {
  field: user__userFieldsEnum;
};


type user__userGroupConnection_sumArgs = {
  field: user__userFieldsEnum;
};

type user__userRelationships = {
  readonly file__file: Maybe<ReadonlyArray<Maybe<file__file>>>;
  readonly media__image: Maybe<ReadonlyArray<Maybe<media__image>>>;
  readonly node__article: Maybe<ReadonlyArray<Maybe<node__article>>>;
  readonly node__event: Maybe<ReadonlyArray<Maybe<node__event>>>;
  readonly node__kcvv_tv: Maybe<ReadonlyArray<Maybe<node__kcvv_tv>>>;
  readonly node__page: Maybe<ReadonlyArray<Maybe<node__page>>>;
  readonly node__player: Maybe<ReadonlyArray<Maybe<node__player>>>;
  readonly node__potw: Maybe<ReadonlyArray<Maybe<node__potw>>>;
  readonly node__sponsor: Maybe<ReadonlyArray<Maybe<node__sponsor>>>;
  readonly node__staff: Maybe<ReadonlyArray<Maybe<node__staff>>>;
  readonly node__team: Maybe<ReadonlyArray<Maybe<node__team>>>;
};

type user__userRelationshipsFilterInput = {
  readonly file__file: InputMaybe<file__fileFilterListInput>;
  readonly media__image: InputMaybe<media__imageFilterListInput>;
  readonly node__article: InputMaybe<node__articleFilterListInput>;
  readonly node__event: InputMaybe<node__eventFilterListInput>;
  readonly node__kcvv_tv: InputMaybe<node__kcvv_tvFilterListInput>;
  readonly node__page: InputMaybe<node__pageFilterListInput>;
  readonly node__player: InputMaybe<node__playerFilterListInput>;
  readonly node__potw: InputMaybe<node__potwFilterListInput>;
  readonly node__sponsor: InputMaybe<node__sponsorFilterListInput>;
  readonly node__staff: InputMaybe<node__staffFilterListInput>;
  readonly node__team: InputMaybe<node__teamFilterListInput>;
};

type user__userSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<user__userFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ArticleImageFragment = { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null };

type FullImageFragment = { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null };

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type HeroImageFragment = { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null };

type KCVVFixedPlayerTeaserFragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type KCVVFluid240Fragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type KCVVFluid480Fragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type KCVVFluid960Fragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type KCVVFluidPlayerTeaserFragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type KCVVFullWidthFragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type KCVVHeroImageFragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type PlayerQueryQueryVariables = Exact<{
  slug: Scalars['String'];
}>;


type PlayerQueryQuery = { readonly nodePlayer: { readonly title: string | null, readonly field_join_date: string | null, readonly field_date_leave: string | null, readonly field_lastname: string | null, readonly field_position: string | null, readonly field_firstname: string | null, readonly field_birth_date: string | null, readonly field_shirtnumber: number | null, readonly field_vv_id: string | null, readonly path: { readonly alias: string | null } | null, readonly body: { readonly processed: string | null } | null, readonly relationships: { readonly node__article: ReadonlyArray<{ readonly title: string | null, readonly timestamp: string | null, readonly path: { readonly alias: string | null } | null, readonly relationships: { readonly field_media_article_image: { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null } | null } | null> | null, readonly node__team: ReadonlyArray<{ readonly title: string | null, readonly relationships: { readonly field_media_article_image: { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null } | null, readonly path: { readonly alias: string | null } | null } | null> | null, readonly field_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null };

type SponsorImageFragment = { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null };

type StaffQueryQueryVariables = Exact<{
  slug: Scalars['String'];
}>;


type StaffQueryQuery = { readonly nodeStaff: { readonly title: string | null, readonly field_join_date: string | null, readonly field_lastname: string | null, readonly field_position_staff: string | null, readonly field_firstname: string | null, readonly field_birth_date: string | null, readonly field_position_short: string | null, readonly path: { readonly alias: string | null } | null, readonly body: { readonly processed: string | null } | null, readonly relationships: { readonly node__article: ReadonlyArray<{ readonly title: string | null, readonly timestamp: string | null, readonly path: { readonly alias: string | null } | null, readonly relationships: { readonly field_media_article_image: { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null } | null } | null> | null, readonly node__team: ReadonlyArray<{ readonly title: string | null, readonly relationships: { readonly field_media_article_image: { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null } | null, readonly path: { readonly alias: string | null } | null } | null> | null, readonly field_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null };

type TeamQueryQueryVariables = Exact<{
  slug: Scalars['String'];
}>;


type TeamQueryQuery = { readonly nodeTeam: { readonly title: string | null, readonly field_fb_id: string | null, readonly field_fb_id_2: string | null, readonly field_vv_id: string | null, readonly field_division_full: string | null, readonly field_tagline: string | null, readonly path: { readonly alias: string | null } | null, readonly field_contact_info: { readonly processed: string | null } | null, readonly relationships: { readonly field_staff: ReadonlyArray<{ readonly field_position_short: string | null, readonly field_lastname: string | null, readonly field_firstname: string | null, readonly path: { readonly alias: string | null } | null, readonly relationships: { readonly field_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null> | null, readonly field_players: ReadonlyArray<{ readonly field_shirtnumber: number | null, readonly field_lastname: string | null, readonly field_firstname: string | null, readonly field_position: string | null, readonly path: { readonly alias: string | null } | null, readonly relationships: { readonly field_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null> | null, readonly field_media_article_image: { readonly field_media_image: { readonly alt: string | null } | null, readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null, readonly image_og: { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null, readonly node__article: ReadonlyArray<{ readonly title: string | null, readonly timestamp: string | null, readonly path: { readonly alias: string | null } | null, readonly relationships: { readonly field_media_article_image: { readonly relationships: { readonly field_media_image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null } | null } | null } | null> | null } | null } | null };


}
